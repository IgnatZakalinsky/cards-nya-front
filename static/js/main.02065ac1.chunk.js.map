{"version":3,"sources":["cnf-0-common/c-1-ui/input/InputNya.module.css","cnf-0-common/c-1-ui/button/ButtonNya.module.css","cnf-0-common/c-1-ui/link/LinkNya.module.css","cnf-0-common/c-1-ui/input/InputNya.tsx","cnf-0-common/c-1-ui/button/ButtonNya.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/Login.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginActions.ts","cnf-1-main/m-2-bll/thunks.ts","cnf-1-main/m-3-dal/instance.ts","cnf-2-fatures/f-1-auth/a-1-login/l-3-dal/LoginAPI.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileActions.ts","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginContainer.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginThunk.ts","cnf-0-common/c-1-ui/link/LinkNya.tsx","cnf-0-common/c-1-ui/status/Status.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginStatus.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/Register.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/RegisterActions.ts","cnf-2-fatures/f-1-auth/a-2-register/r-3-dal/RegisterAPI.ts","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterContainer.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerThunk.ts","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterStatus.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterPage.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfilePage.tsx","cnf-1-main/m-1-ui/main/routes/Pages.tsx","cnf-1-main/m-1-ui/main/dev-header/DevHeader.tsx","cnf-1-main/m-1-ui/main/routes/Routes.tsx","cnf-1-main/m-1-ui/main/Main.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginInitState.ts","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/RegisterInitState.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileInitState.ts","cnf-1-main/m-2-bll/store.ts","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer.ts","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerReducer.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/profileReducer.ts","cnf-1-main/m-1-ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","InputNya","React","memo","info","props","console","log","className","s","inputNya","ButtonNya","buttonNya","Login","email","setEmail","pass","setPass","remember","setRemember","signIn","value","onChange","type","checked","onClick","LoginActions","loading","success","error","tryCatch","logic","setError","a","response","data","message","instance","axios","create","baseURL","LoginAPI","password","rememberMe","post","ProfileActions","user","LoginContainer","useState","setEmailCallback","useCallback","e","currentTarget","setPassCallback","setRememberCallback","dispatch","useDispatch","signInCallback","getStore","LinkNya","link","Status","first","style","color","LoginStatus","useSelector","store","login","LoginPage","redirect","setRedirect","setFirst","useEffect","setTimeout","to","PATH","PROFILE","REGISTER","Register","pass2","setPass2","signUp","RegisterActions","RegisterAPI","RegisterContainer","setPassCallback2","signUpCallback","RegisterStatus","register","RegisterPage","LOGIN","ProfilePage","profile","name","pages","id","title","path","exact","page","mappedLinks","map","p","key","params","DevHeader","mappedRoutes","render","Routes","Main","loginInitState","RegisterInitState","ProfileInitState","_id","isAdmin","verified","token","tokenDeathTime","created","Date","updated","reducers","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","window","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.02065ac1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"InputNya_inputNya__rPNjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNya\":\"ButtonNya_buttonNya__3htRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNya_link__LkYaC\"};","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./InputNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { info?: string };\r\n\r\nconst InputNya: React.FC<InputNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render InputNya-' + info);\r\n    return <input className={s.inputNya} {...props}/>;\r\n});\r\n\r\nexport default InputNya;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./ButtonNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & { info?: string };\r\n\r\nconst ButtonNya: React.FC<ButtonNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render ButtonNya-' + info);\r\n    return <button className={s.buttonNya} {...props}/>;\r\n});\r\n\r\nexport default ButtonNya;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype LoginPropsType = {\r\n    email: string;\r\n    setEmail: (email: ChangeEvent<HTMLInputElement>) => void;\r\n    pass: string;\r\n    setPass: (pass: ChangeEvent<HTMLInputElement>) => void;\r\n    remember: boolean;\r\n    setRemember: (remember: ChangeEvent<HTMLInputElement>) => void;\r\n\r\n    signIn: () => void;\r\n};\r\n\r\nconst Login: React.FC<LoginPropsType> = React.memo((\r\n    {email, setEmail, pass, setPass, remember, setRemember, signIn}\r\n) => {\r\n\r\n    DEV_VERSION && console.log('render Login');\r\n    return (\r\n        <>\r\n            <div><InputNya info={'email'} value={email} onChange={setEmail}/></div>\r\n            <div><InputNya info={'pass'} value={pass} onChange={setPass}/></div>\r\n            <div>\r\n                <label>\r\n                    <InputNya type={'checkbox'} info={'remember'} checked={remember} onChange={setRemember}/>\r\n                    remember me\r\n                </label>\r\n            </div>\r\n            <div>forgot? (will be link)</div>\r\n            <div><ButtonNya info={'sign in'} onClick={signIn}>sign in</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Login;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'login/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'login/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'login/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {AppStoreType} from \"./store\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\nexport type ReturnVoid = void;\r\nexport type ExtraArgumentNya = {};\r\nexport type GetAppStoreType = () => AppStoreType;\r\n\r\nexport const tryCatch = async (logic: () => void, setError: (error: string) => void, info: string) => {\r\n    try {\r\n        await logic();\r\n\r\n    } catch (e) {\r\n        setError(e.response ? e.response.data.error : (e.message + ', more details in the console'));\r\n\r\n        DEV_VERSION && console.log('Nya, ' + info + ' Error!', {...e})\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\nexport const baseURL = DEV_VERSION\r\n    ? 'http://localhost:7542/'\r\n    : 'https://cards-nya-back.herokuapp.com/';\r\n\r\nexport const instance = axios.create({\r\n    baseURL\r\n});\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {UserType} from \"../../a-7-profile/p-2-bll/ProfileInitState\";\r\n\r\nexport type SignInDataType = UserType & { error: string; };\r\n\r\nexport const LoginAPI = {\r\n    signIn: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<SignInDataType>('/auth/login', {email, password, rememberMe});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\nimport {UserType} from \"./ProfileInitState\";\r\n\r\nexport type ProfileActionsType = InferActionsType<typeof ProfileActions>;\r\n\r\nexport const ProfileActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'profile/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'profile/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'profile/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n    setUser: (user: UserType) => ({\r\n        type: 'profile/SET_USER',\r\n        user,\r\n    } as const),\r\n\r\n};\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport Login from \"./Login\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {signIn} from \"../l-2-bll/loginThunk\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst LoginContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [pass, setPass] = useState<string>('');\r\n    const [remember, setRemember] = useState<boolean>(false);\r\n\r\n    const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]\r\n    );\r\n    const setPassCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPass(e.currentTarget.value),\r\n        [setPass]\r\n    );\r\n    const setRememberCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setRemember(e.currentTarget.checked),\r\n        [setRemember]\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const signInCallback = useCallback(\r\n        () => dispatch(signIn(email, pass, remember)),\r\n        [email, pass, remember, dispatch]\r\n    );\r\n\r\n    DEV_VERSION && console.log('render LoginContainer');\r\n    return (\r\n        <Login\r\n            email={email} setEmail={setEmailCallback}\r\n            pass={pass} setPass={setPassCallback}\r\n            remember={remember} setRemember={setRememberCallback}\r\n            signIn={signInCallback}\r\n        />\r\n    );\r\n});\r\n\r\nexport default LoginContainer;\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {LoginActions, LoginActionsType} from \"./LoginActions\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {LoginAPI} from \"../l-3-dal/LoginAPI\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../a-7-profile/p-2-bll/ProfileActions\";\r\n\r\nexport const signIn =\r\n    (email: string, password: string, rememberMe: boolean)\r\n        : ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, LoginActionsType> =>\r\n        async (\r\n            dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, LoginActionsType | ProfileActionsType>,\r\n            getStore: GetAppStoreType\r\n        ) => {\r\n            // nekoClear(dispatch);\r\n            // signInLoading(dispatch, true);\r\n            dispatch(LoginActions.setLoading(true));\r\n\r\n            await tryCatch(\r\n                async () => {\r\n                    const data = await LoginAPI.signIn(email, password, rememberMe);\r\n\r\n                    if (data.error) {\r\n                        dispatch(LoginActions.setError(data.error));\r\n\r\n                        DEV_VERSION && console.log('Nya, Login Error!', data);\r\n\r\n                    } else {\r\n                        // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                        // dispatch(nekoSetName(data.name));\r\n                        // signInSuccess(dispatch, true);\r\n                        dispatch(LoginActions.setSuccess(true));\r\n                        dispatch(ProfileActions.setUser(data)); // error?\r\n\r\n                        DEV_VERSION && console.log('Nya, Login Success!', data)\r\n                    }\r\n                },\r\n                (e) => dispatch(LoginActions.setError(e)),\r\n                \"Login\"\r\n            );\r\n        };\r\n","import React from \"react\";\r\nimport {NavLink, NavLinkProps} from \"react-router-dom\";\r\nimport s from \"./LinkNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type LinkNyaPropsType = NavLinkProps & { info?: string };\r\n\r\nconst LinkNya: React.FC<LinkNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render LinkNya-' + info);\r\n    return <NavLink className={s.link} {...props}/>;\r\n});\r\n\r\nexport default LinkNya;\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type StatusPropsType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n\r\n    first: boolean;\r\n    info?: string;\r\n}\r\n\r\nconst Status: React.FC<StatusPropsType> = React.memo(({loading, success, error, first, info}) => {\r\n\r\n    DEV_VERSION && info && console.log('render Status-' + info);\r\n    if (first) return <div><br/></div>;\r\n    return (\r\n        <>\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype LoginStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst LoginStatus: React.FC<LoginStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.login);\r\n\r\n    DEV_VERSION && console.log('render LoginStatus');\r\n    return <Status loading={loading} success={success} error={error} info={'login'} first={first}/>\r\n});\r\n\r\nexport default LoginStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport LoginContainer from \"./LoginContainer\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport LoginStatus from \"./LoginStatus\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginActions} from \"../l-2-bll/LoginActions\";\r\n\r\nconst LoginPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.login);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first && success) dispatch(LoginActions.setSuccess(false));\r\n        if (first && error) dispatch(LoginActions.setError(''));\r\n        if (first) setFirst(false);\r\n\r\n        if (success && !first && !redirect) setTimeout(() => setRedirect(true), 500);\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log('render LoginPage');\r\n    if (redirect && success && !first) return <Redirect to={PATH.PROFILE}/>;\r\n    return (\r\n        <div>\r\n            login\r\n            <LoginStatus first={first}/>\r\n            <LoginContainer/>\r\n            <LinkNya to={PATH.REGISTER} info={'register in login'}>register</LinkNya>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype RegisterPropsType = {\r\n    email: string;\r\n    setEmail: (email: ChangeEvent<HTMLInputElement>) => void;\r\n    pass: string;\r\n    setPass: (pass: ChangeEvent<HTMLInputElement>) => void;\r\n    pass2: string;\r\n    setPass2: (pass2: ChangeEvent<HTMLInputElement>) => void;\r\n\r\n    signUp: () => void;\r\n};\r\n\r\nconst Register: React.FC<RegisterPropsType> = React.memo((\r\n    {email, setEmail, pass, setPass, pass2, setPass2, signUp}\r\n) => {\r\n\r\n    DEV_VERSION && console.log('render Register');\r\n    return (\r\n        <>\r\n            <div><InputNya info={'email'} value={email} onChange={setEmail}/></div>\r\n            <div><InputNya info={'pass'} value={pass} onChange={setPass}/></div>\r\n            <div><InputNya info={'pass confirm'} value={pass2} onChange={setPass2}/></div>\r\n            <div><ButtonNya info={'sign up'} onClick={signUp}>sign up</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Register;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'register/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'register/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'register/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nexport type SignInDataType = {\r\n    success: boolean;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    signUp: async (email: string, password: string) => {\r\n        const response = await instance.post<SignInDataType>('/auth/register', {email, password});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport Register from \"./Register\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {signUp} from \"../r-2-bll/registerThunk\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst RegisterContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [pass, setPass] = useState<string>('');\r\n    const [pass2, setPass2] = useState<string>('');\r\n\r\n    const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]\r\n    );\r\n    const setPassCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPass(e.currentTarget.value),\r\n        [setPass]\r\n    );\r\n    const setPassCallback2 = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPass2(e.currentTarget.value),\r\n        [setPass2]\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const signUpCallback = useCallback(\r\n        () => dispatch(signUp(email, pass, pass2)),\r\n        [email, pass, pass2, dispatch]\r\n    );\r\n\r\n    DEV_VERSION && console.log('render RegisterContainer');\r\n    return (\r\n        <Register\r\n            email={email} setEmail={setEmailCallback}\r\n            pass={pass} setPass={setPassCallback}\r\n            pass2={pass2} setPass2={setPassCallback2}\r\n            signUp={signUpCallback}\r\n        />\r\n    );\r\n});\r\n\r\nexport default RegisterContainer;\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {RegisterActions, RegisterActionsType} from \"./RegisterActions\";\r\nimport {RegisterAPI} from \"../r-3-dal/RegisterAPI\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nexport const signUp =\r\n    (email: string, password: string, pass2: string)\r\n        : ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, RegisterActionsType> =>\r\n        async (\r\n            dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, RegisterActionsType>,\r\n            getStore: GetAppStoreType\r\n        ) => {\r\n            // nekoClear(dispatch);\r\n            // signInLoading(dispatch, true);\r\n            dispatch(RegisterActions.setLoading(true));\r\n\r\n            await tryCatch(\r\n                async () => {\r\n                    if (password !== pass2) dispatch(RegisterActions.setError('Passwords don\\'t match!'));\r\n                    else {\r\n\r\n                        const data = await RegisterAPI.signUp(email, password);\r\n\r\n                        if (data.error) {\r\n                            dispatch(RegisterActions.setError(data.error));\r\n\r\n                            DEV_VERSION && console.log('Nya, Register Error!', data);\r\n\r\n                        } else {\r\n                            // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                            // dispatch(nekoSetName(data.name));\r\n                            // signInSuccess(dispatch, true);\r\n                            dispatch(RegisterActions.setSuccess(true));\r\n\r\n                            DEV_VERSION && console.log('Nya, Register Success!', data)\r\n                        }\r\n                    }\r\n                },\r\n                (e) => dispatch(RegisterActions.setError(e)),\r\n                \"Register\"\r\n            );\r\n        };\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype RegisterStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst RegisterStatus: React.FC<RegisterStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.register);\r\n\r\n    DEV_VERSION && console.log('render RegisterStatus');\r\n    return <Status loading={loading} success={success} error={error} info={'register'} first={first}/>\r\n});\r\n\r\nexport default RegisterStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport RegisterContainer from \"./RegisterContainer\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport RegisterStatus from \"./RegisterStatus\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RegisterActions} from \"../r-2-bll/RegisterActions\";\r\n\r\nconst RegisterPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.register);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first && success) dispatch(RegisterActions.setSuccess(false));\r\n        if (first && error) dispatch(RegisterActions.setError(''));\r\n        if (first) setFirst(false);\r\n\r\n        if (success && !first && !redirect) setTimeout(() => setRedirect(true), 500);\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log('render RegisterPage');\r\n    if (redirect && success && !first) return <Redirect to={PATH.LOGIN}/>;\r\n    return (\r\n        <div>\r\n            register\r\n            <RegisterStatus first={first}/>\r\n            <RegisterContainer/>\r\n            <LinkNya to={PATH.LOGIN} info={'login in register'}>login</LinkNya>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\n\r\nconst ProfilePage = () => {\r\n    const {user} = useSelector((store: AppStoreType) => store.profile);\r\n\r\n    DEV_VERSION && console.log('render ProfilePage');\r\n    return (\r\n        <div>\r\n            ProfilePage\r\n            <div>{user.name}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, {ReactNode} from \"react\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport LoginPage from \"../../../../cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage\";\r\nimport RegisterPage from \"../../../../cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterPage\";\r\nimport ProfilePage from \"../../../../cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfilePage\";\r\n\r\nexport type PageType = {\r\n    id: number;\r\n    title: string;\r\n    path?: string;\r\n    params?: string;\r\n    exact?: boolean;\r\n    page: (props: RouteComponentProps<any>) => ReactNode;\r\n};\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n};\r\n\r\nexport const pages: PageType[] = [\r\n    {id: 0, title: 'login', path: PATH.LOGIN, exact: true, page: () => <LoginPage/>},\r\n    {id: 1, title: 'register', path: PATH.REGISTER, exact: true, page: () => <RegisterPage/>},\r\n    // {\r\n    //     id: 2, title: 'profile', path: PATH.PROFILE, params: '/:id', exact: true,\r\n    //     page: (p) => <div>{p.match.params.id}</div>\r\n    // },\r\n    {id: 2, title: 'profile', path: PATH.PROFILE, exact: true, page: () => <ProfilePage/>},\r\n\r\n    {id: 9999, title: 'error404', page: () => <div>error404</div>}\r\n];\r\n","import React from \"react\";\r\nimport {pages} from \"../routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedLinks = pages.map(p => (\r\n    <LinkNya\r\n        key={'navLink-' + p.id}\r\n        to={(p.path || '') + (p.params ? '/1' : '')}\r\n        info={'navLink-' + p.id}\r\n    >\r\n        {p.title}\r\n    </LinkNya>\r\n));\r\n\r\nconst DevHeader = () => {\r\n\r\n    DEV_VERSION && console.log('render DevHeader');\r\n    return (\r\n        <>\r\n            {mappedLinks}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DevHeader;\r\n","import React from \"react\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {PageType, pages} from \"./Pages\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedRoutes = pages.map((p: PageType) => (\r\n    <Route\r\n        key={'route-' + p.id}\r\n        path={p.path && (p.path + (p.params || ''))}\r\n        exact={p.exact}\r\n        render={p.page}\r\n    />\r\n));\r\n\r\nconst Routes = () => {\r\n\r\n    DEV_VERSION && console.log('render Routes');\r\n    return (\r\n        <Switch>\r\n            {mappedRoutes}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport DevHeader from \"./dev-header/DevHeader\";\r\nimport Routes from \"./routes/Routes\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\n// headers, routes, footers\r\nconst Main = () => {\r\n\r\n    DEV_VERSION && console.log('render Main');\r\n    return (\r\n        <>\r\n            {DEV_VERSION && <DevHeader/>}\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","export type LoginStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const loginInitState: LoginStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","export type RegisterStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const RegisterInitState: RegisterStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","export type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n\r\n    name: string;\r\n    verified: boolean;\r\n\r\n    token: string;\r\n    tokenDeathTime: number;\r\n\r\n    created: Date;\r\n    updated: Date;\r\n}\r\n\r\nexport type ProfileStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n\r\n    user: UserType\r\n}\r\n\r\nexport const ProfileInitState: ProfileStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n\r\n    user: {\r\n        _id: '0',\r\n        email: '',\r\n        rememberMe: false,\r\n        isAdmin: false,\r\n\r\n        name: 'fake',\r\n        verified: false,\r\n\r\n        token: '',\r\n        tokenDeathTime: 0,\r\n\r\n        created: new Date(),\r\n        updated: new Date(),\r\n    }\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {loginReducer} from \"../../cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer\";\r\nimport {registerReducer} from \"../../cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerReducer\";\r\nimport {DEV_VERSION} from \"../../config\";\r\nimport {profileReducer} from \"../../cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/profileReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n\r\n    profile: profileReducer\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\nif (DEV_VERSION) {\r\n    // @ts-ignore\r\n    window.store = store; // for dev\r\n}\r\n","import {loginInitState, LoginStateType} from \"./LoginInitState\";\r\nimport {LoginActionsType} from \"./LoginActions\";\r\n\r\nexport const loginReducer = (state = loginInitState, action: LoginActionsType): LoginStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case 'login/SET_LOADING': {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case 'login/SET_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import {RegisterInitState, RegisterStateType} from \"./RegisterInitState\";\r\nimport {RegisterActionsType} from \"./RegisterActions\";\r\n\r\nexport const registerReducer =\r\n    (state = RegisterInitState, action: RegisterActionsType): RegisterStateType => {\r\n        switch (action.type) {\r\n            case \"register/SET_ERROR\": {\r\n                return {\r\n                    ...state,\r\n                    error: action.error,\r\n                    loading: false,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"register/SET_LOADING\": {\r\n                return {\r\n                    ...state,\r\n                    error: '',\r\n                    loading: action.loading,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"register/SET_SUCCESS\": {\r\n                return {\r\n                    ...state,\r\n                    error: '',\r\n                    loading: false,\r\n                    success: action.success,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {ProfileInitState, ProfileStateType} from \"./ProfileInitState\";\r\nimport {ProfileActionsType} from \"./ProfileActions\";\r\n\r\nexport const profileReducer =\r\n    (state = ProfileInitState, action: ProfileActionsType): ProfileStateType => {\r\n        switch (action.type) {\r\n            case \"profile/SET_USER\": {\r\n                return {\r\n                    ...state,\r\n                    user: action.user,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport Main from \"./main/Main\";\nimport store from \"../m-2-bll/store\";\nimport {DEV_VERSION} from \"../../config\";\n\n// add context\nconst App = () => {\n\n    DEV_VERSION && console.log('render App');\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './cnf-1-main/m-1-ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}