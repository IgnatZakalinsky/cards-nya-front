{"version":3,"sources":["cnf-0-common/c-1-ui/input/InputNya.module.css","cnf-0-common/c-1-ui/button/ButtonNya.module.css","cnf-0-common/c-1-ui/link/LinkNya.module.css","cnf-0-common/c-1-ui/input/InputNya.tsx","cnf-0-common/c-1-ui/button/ButtonNya.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/Login.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginActions.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileActions.ts","cnf-1-main/m-2-bll/thunks.ts","cnf-1-main/m-3-dal/instance.ts","cnf-2-fatures/f-1-auth/a-1-login/l-3-dal/LoginAPI.ts","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginContainer.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginThunk.ts","cnf-0-common/c-1-ui/link/LinkNya.tsx","cnf-0-common/c-1-ui/status/Status.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginStatus.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/Register.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/RegisterActions.ts","cnf-2-fatures/f-1-auth/a-2-register/r-3-dal/RegisterAPI.ts","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterContainer.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerThunk.ts","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterStatus.tsx","cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterPage.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-3-dal/ProfileAPI.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfilePage.tsx","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/updateUserThunk.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/getUsersThunk.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/sendGeneralChatMessageThunk.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/getGeneralChatMessagesThunk.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-3-dal/PacksAPI.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/PacksActions.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/getPacksThunk.ts","cnf-0-common/c-1-ui/table/TableNya.tsx","cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksContainer.tsx","cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksModel.tsx","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/addPackThunk.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/deletePackThunk.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/updatePackThunk.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksPage.tsx","cnf-2-fatures/f-2-cards/c-2-cards/c-3-dal/CardsAPI.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/CardsActions.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/getCardsThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsContainer.tsx","cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsModel.tsx","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/addCardThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/deleteCardThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/updateCardThunk.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsPage.tsx","cnf-2-fatures/f-3-learn/l-1-ui/LearnPage.tsx","cnf-1-main/m-1-ui/main/routes/Pages.tsx","cnf-1-main/m-1-ui/main/dev-header/DevHeader.tsx","cnf-1-main/m-1-ui/main/routes/Routes.tsx","cnf-1-main/m-1-ui/main/Main.tsx","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/LoginInitState.ts","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/RegisterInitState.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileInitState.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/PacksInitState.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/CardsInitState.ts","cnf-1-main/m-2-bll/store.ts","cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer.ts","cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerReducer.ts","cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/profileReducer.ts","cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/packsReducer.ts","cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/cardsReducer.ts","cnf-1-main/m-1-ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","InputNya","React","memo","info","props","console","log","className","s","inputNya","ButtonNya","buttonNya","Login","email","setEmail","pass","setPass","remember","setRemember","signIn","loading","value","onChange","type","checked","onClick","disabled","LoginActions","success","error","ProfileActions","user","token","tryCatch","dispatch","logic","setError","a","response","data","message","instance","axios","create","baseURL","LoginAPI","password","rememberMe","post","LoginContainer","useState","setEmailCallback","useCallback","e","currentTarget","setPassCallback","setRememberCallback","useDispatch","signInCallback","getStore","useSelector","store","login","LinkNya","link","Status","first","style","color","LoginStatus","LoginPage","redirect","setRedirect","setFirst","useEffect","setTimeout","to","PATH","PROFILE","REGISTER","Register","pass2","setPass2","signUp","RegisterActions","RegisterAPI","RegisterContainer","setPassCallback2","signUpCallback","register","RegisterStatus","RegisterPage","LOGIN","ProfileAPI","updateUser","name","avatar","put","getUsers","get","sendGeneralChatMessage","getGeneralChatMessages","ProfilePage","profile","PacksAPI","getPacks","addPack","cardsPack","deckCover","updatePack","id","_id","deletePack","delete","PacksActions","packs","cardPacks","TableNya","title","model","headerStyle","tableStyle","rowsStyle","rowStyle","margin","border","width","display","map","m","index","dataItem","dataIndex","key","modelIndex","render","PacksContainer","add","del","update","grade","CARDS","LEARN","PacksPage","CardsAPI","getCards","cardsPack_id","addCard","card","question","Math","random","questionImg","updateCard","answerImg","deleteCard","CardsActions","cards","CardsContainer","useParams","card_id","pack_id","answer","CardsPage","grades","getCard","sum","reduce","acc","rand","res","i","newSum","LearnPage","isChecked","setIsChecked","shots","rating","more_id","created","updated","setCard","length","g","PACKS","pages","path","exact","page","params","mappedLinks","p","DevHeader","mappedRoutes","Routes","Main","loginInitState","RegisterInitState","ProfileInitState","isAdmin","verified","tokenDeathTime","Date","PacksInitState","CardsInitState","reducers","combineReducers","state","action","createStore","applyMiddleware","thunkMiddleware","window","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"4GACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,KAAO,wB,sNCiBVC,EAX+BC,IAAMC,MAAK,YAKnD,IAHEC,EAGH,EAHGA,KACGC,EAEN,wBAGD,OADeD,GAAQE,QAAQC,IAAI,mBAAqBH,GACjD,yCAAOI,UAAWC,IAAEC,UAAcL,O,iBCG9BM,EAXiCT,IAAMC,MAAK,YAKrD,IAHEC,EAGH,EAHGA,KACGC,EAEN,wBAGD,OADeD,GAAQE,QAAQC,IAAI,oBAAsBH,GAClD,0CAAQI,UAAWC,IAAEG,WAAeP,OCuBhCQ,EArByBX,IAAMC,MAAK,YAE7C,IADDW,EACA,EADAA,MAAOC,EACP,EADOA,SAAUC,EACjB,EADiBA,KAAMC,EACvB,EADuBA,QAASC,EAChC,EADgCA,SAAUC,EAC1C,EAD0CA,YAAaC,EACvD,EADuDA,OAAQC,EAC/D,EAD+DA,QAIhE,OADef,QAAQC,IAAI,gBAEvB,oCACI,6BAAK,kBAAC,EAAD,CAAUH,KAAM,QAASkB,MAAOR,EAAOS,SAAUR,KACtD,6BAAK,kBAAC,EAAD,CAAUX,KAAM,OAAQkB,MAAON,EAAMO,SAAUN,KACpD,6BACI,+BACI,kBAAC,EAAD,CAAUO,KAAM,WAAYpB,KAAM,WAAYqB,QAASP,EAAUK,SAAUJ,IAD/E,gBAKJ,uDACA,6BAAK,kBAAC,EAAD,CAAWf,KAAM,UAAWsB,QAASN,EAAQO,SAAUN,GAAvD,gB,uBC7BJO,EACG,SAACP,GAAD,MAAuB,CAC/BG,KAAM,oBACNH,YAHKO,EAKG,SAACC,GAAD,MAAuB,CAC/BL,KAAM,oBACNK,YAPKD,EASC,SAACE,GAAD,MAAoB,CAC1BN,KAAM,kBACNM,U,OCVKC,EAcA,SAACC,GAAD,MAAqB,CAC1BR,KAAM,mBACNQ,SAhBKD,EAkBC,SAACE,GAAD,MAAoB,CAC1BT,KAAM,oBACNS,UCjBKC,EAAQ,uCAAG,WACpBC,EACAC,EACAC,EACAjC,GAJoB,eAAAkC,EAAA,+EAOVF,IAPU,uDAUVN,EAAQ,KAAES,SAAW,KAAEA,SAASC,KAAKV,MAAS,KAAEW,QAAU,gCAC5D,KAAEF,UAAUJ,EAASJ,EAAwB,KAAEQ,SAASC,KAAKP,QACjEI,EAASP,GAEMxB,QAAQC,IAAI,QAAUH,EAAO,UAA7B,sBAdC,yDAAH,4D,QCDRsC,E,OAAWC,EAAMC,OAAO,CACjCC,QAJE,+BCCOC,EAAW,CACpB1B,OAAO,WAAD,4BAAE,WAAON,EAAeiC,EAAkBC,GAAxC,eAAAV,EAAA,sEACmBI,EAASO,KAAqB,cAAe,CAACnC,QAAOiC,WAAUC,eADlF,cACET,EADF,yBAGGA,EAASC,MAHZ,2CAAF,uDAAC,ICsCIU,EArCQhD,IAAMC,MAAK,WAAO,IAAD,EACVgD,mBAA+B,qBADrB,mBAC7BrC,EAD6B,KACtBC,EADsB,OAEZoC,mBAA+B,aAFnB,mBAE7BnC,EAF6B,KAEvBC,EAFuB,OAGJkC,oBAAkB,GAHd,mBAG7BjC,EAH6B,KAGnBC,EAHmB,KAK9BiC,EAAmBC,uBACrB,SAACC,GAAD,OAAsCvC,EAASuC,EAAEC,cAAcjC,SAC/D,CAACP,IAECyC,EAAkBH,uBACpB,SAACC,GAAD,OAAsCrC,EAAQqC,EAAEC,cAAcjC,SAC9D,CAACL,IAECwC,EAAsBJ,uBACxB,SAACC,GAAD,OAAsCnC,EAAYmC,EAAEC,cAAc9B,WAClE,CAACN,IAGCgB,EAAWuB,cACXC,EAAiBN,uBACnB,kBAAMlB,EClBV,SAACrB,EAAeiC,EAAkBC,GAAlC,8CAEI,WACIb,EACAyB,GAFJ,SAAAtB,EAAA,6DAMIH,EAASP,GAAwB,IANrC,SAQUM,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEACuBQ,EAAS1B,OAAON,EAAOiC,EAAUC,GADxD,QACUR,EADV,QAGaV,OACLK,EAASP,EAAsBY,EAAKV,QAErBxB,QAAQC,IAAI,oBAAqBiC,KAOhDL,EAASP,GAAwB,IACjCO,EAASJ,EAAuBS,IAEjBlC,QAAQC,IAAI,sBAAuBiC,IAhB1D,4CAmBA,SAACc,GAAD,OAAOnB,EAASP,EAAsB0B,MACtC,SA9BR,2CAFJ,wDDkBmBlC,CAAON,EAAOE,EAAME,MACnC,CAACJ,EAAOE,EAAME,EAAUiB,IAErBd,EAAWwC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAAtD1C,QAGP,OADef,QAAQC,IAAI,yBAEvB,kBAAC,EAAD,CACIO,MAAOA,EAAOC,SAAUqC,EACxBpC,KAAMA,EAAMC,QAASuC,EACrBtC,SAAUA,EAAUC,YAAasC,EACjCrC,OAAQuC,EACRtC,QAASA,O,iBErBN2C,EAX6B9D,IAAMC,MAAK,YAKjD,IAHEC,EAGH,EAHGA,KACGC,EAEN,wBAGD,OADeD,GAAQE,QAAQC,IAAI,kBAAoBH,GAChD,kBAAC,IAAD,eAASI,UAAWC,IAAEwD,MAAU5D,OCe5B6D,EAlB2BhE,IAAMC,MAAK,YAA6C,IAA3CkB,EAA0C,EAA1CA,QAASQ,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAOqC,EAAiB,EAAjBA,MAAO/D,EAAU,EAAVA,KAGnF,OADeA,GAAQE,QAAQC,IAAI,iBAAmBH,GAClD+D,EAAc,6BAAK,8BAEnB,oCACK9C,EACK,yBAAK+C,MAAO,CAACC,MAAO,WAApB,cACAvC,EACI,yBAAKsC,MAAO,CAACC,MAAO,QAASvC,GAC7BD,EACI,yBAAKuC,MAAO,CAACC,MAAO,SAApB,YACA,6BAAK,kCCPhBC,EAPqCpE,IAAMC,MAAK,YAAc,IAAZgE,EAAW,EAAXA,MAAW,EACtCN,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAAtE1C,EADiE,EACjEA,QAASQ,EADwD,EACxDA,QAASC,EAD+C,EAC/CA,MAGzB,OADexB,QAAQC,IAAI,sBACpB,kBAAC,EAAD,CAAQc,QAASA,EAASQ,QAASA,EAASC,MAAOA,EAAO1B,KAAM,QAAS+D,MAAOA,O,QCuB5EI,EA1BG,WAAO,IAAD,EACKV,aAAY,SAACC,GAAD,OAAyBA,EAAMC,SAA7DlC,EADa,EACbA,QAASC,EADI,EACJA,MADI,EAEYqB,oBAAkB,GAF9B,mBAEbqB,EAFa,KAEHC,EAFG,OAGMtB,oBAAkB,GAHxB,mBAGbgB,EAHa,KAGNO,EAHM,KAKdvC,EAAWuB,cAUjB,OATAiB,qBAAU,WACFR,GAAStC,GAASM,EAASP,GAAwB,IACnDuC,GAASrC,GAAOK,EAASP,EAAsB,KAC/CuC,GAAOO,GAAS,IAEhB7C,GAAYsC,GAAUK,GAAUI,YAAW,kBAAMH,GAAY,KAAO,OACzE,CAACN,EAAOtC,EAASC,EAAOK,EAAUuC,EAAUF,EAAUC,IAE1CnE,QAAQC,IAAI,oBACvBiE,GAAY3C,IAAYsC,EAAc,kBAAC,IAAD,CAAUU,GAAIC,GAAKC,UAEzD,qCAEI,kBAAC,EAAD,CAAaZ,MAAOA,IACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASU,GAAIC,GAAKE,SAAU5E,KAAM,qBAAlC,cCAG6E,EAf+B/E,IAAMC,MAAK,YAEnD,IADDW,EACA,EADAA,MAAOC,EACP,EADOA,SAAUC,EACjB,EADiBA,KAAMC,EACvB,EADuBA,QAASiE,EAChC,EADgCA,MAAOC,EACvC,EADuCA,SAAUC,EACjD,EADiDA,OAAQ/D,EACzD,EADyDA,QAI1D,OADef,QAAQC,IAAI,mBAEvB,oCACI,6BAAK,kBAAC,EAAD,CAAUH,KAAM,QAASkB,MAAOR,EAAOS,SAAUR,KACtD,6BAAK,kBAAC,EAAD,CAAUX,KAAM,OAAQkB,MAAON,EAAMO,SAAUN,KACpD,6BAAK,kBAAC,EAAD,CAAUb,KAAM,eAAgBkB,MAAO4D,EAAO3D,SAAU4D,KAC7D,6BAAK,kBAAC,EAAD,CAAW/E,KAAM,UAAWsB,QAAS0D,EAAQzD,SAAUN,GAAvD,gBCvBJgE,EACG,SAAChE,GAAD,MAAuB,CAC/BG,KAAM,uBACNH,YAHKgE,EAKG,SAACxD,GAAD,MAAuB,CAC/BL,KAAM,uBACNK,YAPKwD,EASC,SAACvD,GAAD,MAAoB,CAC1BN,KAAM,qBACNM,UCPKwD,EAAc,CACvBF,OAAO,WAAD,4BAAE,WAAOtE,EAAeiC,GAAtB,eAAAT,EAAA,sEACmBI,EAASO,KAAqB,iBAAkB,CAACnC,QAAOiC,aAD3E,cACER,EADF,yBAGGA,EAASC,MAHZ,2CAAF,qDAAC,ICmCI+C,EArCWrF,IAAMC,MAAK,WAAO,IAAD,EACbgD,mBAAiB,IADJ,mBAChCrC,EADgC,KACzBC,EADyB,OAEfoC,mBAAiB,IAFF,mBAEhCnC,EAFgC,KAE1BC,EAF0B,OAGbkC,mBAAiB,IAHJ,mBAGhC+B,EAHgC,KAGzBC,EAHyB,KAKjC/B,EAAmBC,uBACrB,SAACC,GAAD,OAAsCvC,EAASuC,EAAEC,cAAcjC,SAC/D,CAACP,IAECyC,EAAkBH,uBACpB,SAACC,GAAD,OAAsCrC,EAAQqC,EAAEC,cAAcjC,SAC9D,CAACL,IAECuE,EAAmBnC,uBACrB,SAACC,GAAD,OAAsC6B,EAAS7B,EAAEC,cAAcjC,SAC/D,CAAC6D,IAGChD,EAAWuB,cACX+B,EAAiBpC,uBACnB,kBAAMlB,ECnBV,SAACrB,EAAeiC,EAAkBmC,GAAlC,8CAEI,WACI/C,EACAyB,GAFJ,SAAAtB,EAAA,6DAMIH,EAASkD,GAA2B,IANxC,SAQUnD,EACFC,EADU,sBAEV,4BAAAG,EAAA,yDACQS,IAAamC,EADrB,gBAC4B/C,EAASkD,EAAyB,2BAD9D,sCAI2BC,EAAYF,OAAOtE,EAAOiC,GAJrD,QAIcP,EAJd,QAMiBV,OACLK,EAASkD,EAAyB7C,EAAKV,QAExBxB,QAAQC,IAAI,uBAAwBiC,KAOnDL,EAASkD,GAA2B,IAErB/E,QAAQC,IAAI,yBAA0BiC,IAlBjE,4CAsBA,SAACc,GAAD,OAAOnB,EAASkD,EAAyB/B,MACzC,YAjCR,2CAFJ,wDDmBmB8B,CAAOtE,EAAOE,EAAMkE,MACnC,CAACpE,EAAOE,EAAMkE,EAAO/C,IAElBd,EAAWwC,aAAY,SAACC,GAAD,OAAyBA,EAAM4B,YAAtDrE,QAGP,OADef,QAAQC,IAAI,4BAEvB,kBAAC,EAAD,CACIO,MAAOA,EAAOC,SAAUqC,EACxBpC,KAAMA,EAAMC,QAASuC,EACrB0B,MAAOA,EAAOC,SAAUK,EACxBJ,OAAQK,EACRpE,QAASA,OEtBNsE,EAP2CzF,IAAMC,MAAK,YAAc,IAAZgE,EAAW,EAAXA,MAAW,EAC5CN,aAAY,SAACC,GAAD,OAAyBA,EAAM4B,YAAtErE,EADuE,EACvEA,QAASQ,EAD8D,EAC9DA,QAASC,EADqD,EACrDA,MAGzB,OADexB,QAAQC,IAAI,yBACpB,kBAAC,EAAD,CAAQc,QAASA,EAASQ,QAASA,EAASC,MAAOA,EAAO1B,KAAM,WAAY+D,MAAOA,OCuB/EyB,EA1BM,WAAO,IAAD,EACE/B,aAAY,SAACC,GAAD,OAAyBA,EAAM4B,YAA7D7D,EADgB,EAChBA,QAASC,EADO,EACPA,MADO,EAESqB,oBAAkB,GAF3B,mBAEhBqB,EAFgB,KAENC,EAFM,OAGGtB,oBAAkB,GAHrB,mBAGhBgB,EAHgB,KAGTO,EAHS,KAKjBvC,EAAWuB,cAUjB,OATAiB,qBAAU,WACFR,GAAStC,GAASM,EAASkD,GAA2B,IACtDlB,GAASrC,GAAOK,EAASkD,EAAyB,KAClDlB,GAAOO,GAAS,IAEhB7C,GAAYsC,GAAUK,GAAUI,YAAW,kBAAMH,GAAY,KAAO,OACzE,CAACN,EAAOtC,EAASC,EAAOK,EAAUuC,EAAUF,EAAUC,IAE1CnE,QAAQC,IAAI,uBACvBiE,GAAY3C,IAAYsC,EAAc,kBAAC,IAAD,CAAUU,GAAIC,GAAKe,QAEzD,wCAEI,kBAAC,EAAD,CAAgB1B,MAAOA,IACvB,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASU,GAAIC,GAAKe,MAAOzF,KAAM,qBAA/B,WCvBC0F,EAAa,CACtBC,WAAW,WAAD,4BAAE,WAAO9D,EAAe+D,EAAcC,GAApC,eAAA3D,EAAA,sEACeI,EAASwD,IAAoB,WAAY,CAACjE,QAAO+D,OAAMC,WADtE,cACF1D,EADE,yBAGDA,EAASC,MAHR,2CAAF,uDAAC,GAKX2D,SAAS,WAAD,4BAAE,WAAOlE,GAAP,eAAAK,EAAA,sEACiBI,EAAS0D,IAAT,8BAAoDnE,IADrE,cACAM,EADA,yBAGCA,EAASC,MAHV,2CAAF,mDAAC,GAKT6D,uBAAuB,WAAD,4BAAE,WAAOpE,GAAP,eAAAK,EAAA,sEACGI,EAASO,KAAqB,0BACjD,CAAChB,QAAOQ,QAAS,iBAFD,cACdF,EADc,yBAIbA,EAASC,MAJI,2CAAF,mDAAC,GAMvB8D,uBAAuB,WAAD,4BAAE,WAAOrE,GAAP,eAAAK,EAAA,sEACGI,EAAS0D,IAAT,wCAA8DnE,IADjE,cACdM,EADc,yBAGbA,EAASC,MAHI,2CAAF,mDAAC,ICQZ+D,EAxBK,WAAO,IAChBvE,EAAQ6B,aAAY,SAACC,GAAD,OAAyBA,EAAM0C,WAAnDxE,KAEDG,EAAWuB,cAOjB,OADepD,QAAQC,IAAI,sBAEvB,2CAEI,6BAAMyB,EAAKgE,MACX,6BACI,kBAAC,EAAD,CAAWtE,QAXR,kBAAMS,GCPE6D,EDOkB,MCPJC,EDOW,cCP1B,uCACtB,WACI9D,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBwD,EAAWC,WAAW9D,EAAO+D,EAAMC,GAF1D,QAEUzD,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,yBAA0BiC,IAQrDL,EAASJ,EAAwBS,EAAKP,QAEvB3B,QAAQC,IAAI,2BAA4BiC,IAjB/D,4CAqBA,SAACc,MAGD,cApCR,2CADsB,8DAAC0C,EAAcC,IDkBzB,YACA,kBAAC,EAAD,CAAWvE,QAXX,kBAAMS,EERE,uCACpB,WACIA,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBwD,EAAWK,SAASlE,GAF3C,QAEUO,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,uBAAwBiC,IAQnDL,EAASJ,EAAwBS,EAAKP,QAEvB3B,QAAQC,IAAI,yBAA0BiC,IAjB7D,4CAqBA,SAACc,MAGD,YApCR,2CADoB,2DFmBR,aACA,kBAAC,EAAD,CAAW5B,QAXV,kBAAMS,EGTe,uCAClC,WACIA,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBwD,EAAWO,uBAAuBpE,GAFzD,QAEUO,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,qCAAsCiC,IAQjEL,EAASJ,EAAwBS,EAAKP,QAEvB3B,QAAQC,IAAI,uCAAwCiC,IAjB3E,4CAqBA,SAACc,MAGD,0BApCR,2CADkC,2DHoBtB,gBACA,kBAAC,EAAD,CAAW5B,QAXH,kBAAMS,EIVQ,uCAClC,WACIA,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBwD,EAAWQ,uBAAuBrE,GAFzD,QAEUO,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,qCAAsCiC,IAQjEL,EAASJ,EAAwBS,EAAKP,QAEvB3B,QAAQC,IAAI,uCAAwCiC,IAjB3E,4CAqBA,SAACc,MAGD,0BApCR,2CADkC,2DJqBtB,mBKfHmD,EAAW,CACpBC,SAAS,WAAD,4BAAE,WAAOzE,GAAP,eAAAK,EAAA,sEACiBI,EAAS0D,IAC5B,4BAAqBnE,GAArB,mBAFE,cACAM,EADA,yBAOCA,EAASC,MAPV,2CAAF,mDAAC,GASTmE,QAAQ,WAAD,4BAAE,WAAO1E,GAAP,eAAAK,EAAA,sEACkBI,EAASO,KAAT,cAAuC,CAC1DhB,QACA2E,UAAW,CACPC,UAAW,gBAJd,cACCtE,EADD,yBAQEA,EAASC,MARX,2CAAF,mDAAC,GAURsE,WAAW,WAAD,4BAAE,WAAO7E,EAAe8E,GAAtB,eAAAzE,EAAA,sEACeI,EAASwD,IAAT,cAAsC,CACzDjE,QACA2E,UAAW,CACPI,IAAKD,EACLf,KAAM,gBALN,cACFzD,EADE,yBASDA,EAASC,MATR,2CAAF,qDAAC,GAWXyE,WAAW,WAAD,4BAAE,WAAOhF,EAAe8E,GAAtB,eAAAzE,EAAA,sEACeI,EAASwE,OAAT,4BAA+CjF,EAA/C,eAA2D8E,IAD1E,cACFxE,EADE,yBAGDA,EAASC,MAHR,2CAAF,qDAAC,ICvCF2E,EAcC,SAACC,GAAD,MAAwB,CAC9B5F,KAAM,kBACN4F,UCbKV,EAAW,yDACpB,WACIvE,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBmE,EAASC,SAASzE,GAFzC,QAEUO,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,uBAAwBiC,IAOnDL,EAASgF,EAAsB3E,EAAK6E,YACpClF,EAASJ,EAAwBS,EAAKP,QAEvB3B,QAAQC,IAAI,yBAA0BiC,IAjB7D,4CAqBA,SAACc,MAGD,YApCR,2CADoB,yDCqCTgE,EAhC+B,SAAC,GAOzC,IAAD,IALGjG,eAKH,aALoBkG,aAKpB,MAL4B,QAK5B,EALqCC,EAKrC,EALqCA,MAAOhF,EAK5C,EAL4CA,KAEzCiF,EAGH,EAHGA,YAAaC,EAGhB,EAHgBA,WACbC,EAEH,EAFGA,UAAWC,EAEd,EAFcA,SAIf,OACI,yBAAKxD,MAAK,aAAGyD,OAAQ,UAAaH,IAC7BH,EAED,yBAAKnD,MAAK,aAAG0D,OAAQ,gBAAiBC,MAAO,OAAQC,QAAS,QAAWP,IACpED,EAAMS,KAAI,SAACC,EAAGC,GAAJ,OAAcD,EAAEX,MAAMY,EAAO9G,OAG5C,yBAAK+C,MAAK,aAAG0D,OAAQ,iBAAkBC,MAAO,QAAWJ,IACpDnF,EAAKyF,KAAI,SAACG,EAAeC,GAAhB,OACN,yBACIC,IAAKf,EAAQ,SAAWa,EAASpB,KAAOqB,GACxCjE,MAAK,aAAG2D,MAAO,OAAQC,QAAS,QAAWJ,IAE1CJ,EAAMS,KAAI,SAACC,EAAGK,GAAJ,OACPL,EAAEM,OAAOJ,EAAUG,EAAYF,EAAWhH,aCEvDoH,EA5BQvI,IAAMC,MAAK,WAAO,IAC9BiH,EAASvD,aAAY,SAACC,GAAD,OAAyBA,EAAMsD,SAApDA,MAEDjF,EAAWuB,cACjBiB,qBAAU,WAKN,OAJArE,QAAQC,IAAI,4BAEZ4B,EAASuE,KAEF,WACHpG,QAAQC,IAAI,mCAEjB,CAAC4B,IAEJ,ICjBAuG,EACAC,EACAC,EDeMpB,GCjBNkB,EDkBI,kBAAMvG,EElBS,uCACnB,WACIA,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBmE,EAASE,QAAQ1E,GAFxC,QAEUO,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,sBAAuBiC,IAQlDL,EAASJ,EAAwBS,EAAKP,QACtCE,EAASuE,KAEMpG,QAAQC,IAAI,wBAAyBiC,IAlB5D,4CAsBA,SAACc,MAGD,WArCR,2CADmB,0DDCnBqF,EDkBI,SAAC5B,GAAD,OAAgB5E,EGnBE,SAAC4E,GAAD,8CACtB,WACI5E,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBmE,EAASQ,WAAWhF,EAAO8E,GAFlD,QAEUvE,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,yBAA0BiC,IAQrDL,EAASJ,EAAwBS,EAAKP,QACtCE,EAASuE,KAEMpG,QAAQC,IAAI,2BAA4BiC,IAlB/D,4CAsBA,SAACc,MAGD,cArCR,2CADsB,wDHmBO2D,CAAWF,KCjBxC6B,EDkBI,SAAC7B,GAAD,OAAgB5E,EIpBE,SAAC4E,GAAD,8CACtB,WACI5E,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuBmE,EAASK,WAAW7E,EAAO8E,GAFlD,QAEUvE,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,yBAA0BiC,IAQrDL,EAASJ,EAAwBS,EAAKP,QACtCE,EAASuE,KAEMpG,QAAQC,IAAI,2BAA4BiC,IAlB/D,4CAsBA,SAACc,MAGD,cArCR,2CADsB,wDJoBOwD,CAAWC,KCjBlB,CACtB,CACIQ,MAAO,SAACY,EAAO9G,GAAR,OACH,yBAAKiH,IAAK,cAAgBH,EAAO/D,MAAO,CAAC2D,MAAO,MAAhD,SAEJS,OAAQ,SAACJ,EAAoBG,EAAYF,EAAWhH,GAA5C,OACJ,yBAAKiH,IAAK,aAAeF,EAASpB,IAAK5C,MAAO,CAAC2D,MAAO,MACjDK,EAASpC,QAItB,CACIuB,MAAO,SAACY,EAAO9G,GAAR,OACH,yBAAKiH,IAAK,eAAiBH,EAAO/D,MAAO,CAAC2D,MAAO,MAAjD,UAEJS,OAAQ,SAACJ,EAAoBG,EAAYF,EAAWhH,GAA5C,OACJ,yBAAKiH,IAAK,cAAgBF,EAASpB,IAAK5C,MAAO,CAAC2D,MAAO,MAClDK,EAASS,SAItB,CACItB,MAAO,SAACY,EAAO9G,GAAR,OACH,yBAAKiH,IAAK,iBAAmBH,EAAO/D,MAAO,CAAC2D,MAAO,MAC/C,kBAAC,EAAD,CAAWrG,QAASgH,GAApB,SAGRF,OAAQ,SAACJ,EAAoBG,EAAYF,EAAWhH,GAA5C,OACJ,yBAAKiH,IAAK,gBAAkBF,EAASpB,IAAK5C,MAAO,CAAC2D,MAAO,MACrD,kBAAC,EAAD,CAAWrG,QAAS,kBAAMiH,EAAIP,EAASpB,OAAvC,OACA,kBAAC,EAAD,CAAWtF,QAAS,kBAAMkH,EAAOR,EAASpB,OAA1C,UACA,kBAAC,EAAD,CAASnC,GAAIC,GAAKgE,MAAQ,IAAMV,EAASpB,KAAzC,SACA,kBAAC,EAAD,CAASnC,GAAIC,GAAKiE,MAAQ,IAAMX,EAASpB,KAAzC,cDXZ,OADe1G,QAAQC,IAAI,yBAEvB,6BACI,kBAAC,EAAD,CAAUiH,MAAOA,EAAOhF,KAAM4E,EAAOG,MAAO,kBKlBzCyB,GAZG,WAGd,OADe1I,QAAQC,IAAI,oBAEvB,yCAGI,kBAAC,EAAD,QCEC0I,GAAW,CACpBC,SAAS,WAAD,4BAAE,WAAOjH,EAAekH,GAAtB,eAAA7G,EAAA,sEACiBI,EAAS0D,IAAT,4BAA4CnE,EAA5C,yBAAkEkH,IADnF,cACA5G,EADA,yBAGCA,EAASC,MAHV,2CAAF,qDAAC,GAKT4G,QAAQ,WAAD,4BAAE,WAAOnH,EAAekH,GAAtB,eAAA7G,EAAA,sEACkBI,EAASO,KAAT,cAAuC,CAC1DhB,QACAoH,KAAM,CACFF,eACAG,SAAU,OACVT,MAAuB,EAAhBU,KAAKC,SACZC,YAAa,cAPhB,cACClH,EADD,yBAWEA,EAASC,MAXX,2CAAF,qDAAC,GAaRkH,WAAW,WAAD,4BAAE,WAAOzH,EAAe8E,GAAtB,eAAAzE,EAAA,sEACeI,EAASwD,IAAT,cAAsC,CACzDjE,QACAoH,KAAM,CACFrC,IAAKD,EACLuC,SAAU,mBACVK,UAAW,qBANX,cACFpH,EADE,yBAUDA,EAASC,MAVR,2CAAF,qDAAC,GAYXoH,WAAW,WAAD,4BAAE,WAAO3H,EAAe8E,GAAtB,eAAAzE,EAAA,sEACeI,EAASwE,OAAT,4BAA+CjF,EAA/C,eAA2D8E,IAD1E,cACFxE,EADE,yBAGDA,EAASC,MAHR,2CAAF,qDAAC,ICvCFqH,GAcC,SAACC,GAAD,MAAwB,CAC9BtI,KAAM,kBACNsI,UCbKZ,GAAW,SAACnC,GAAD,8CACpB,WACI5E,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuB2G,GAASC,SAASjH,EAAO8E,GAFhD,QAEUvE,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,uBAAwBiC,IAOnDL,EAAS0H,GAAsBrH,EAAKsH,QACpC3H,EAASJ,EAAwBS,EAAKP,QAEvB3B,QAAQC,IAAI,yBAA0BiC,IAjB7D,4CAqBA,SAACc,MAGD,YApCR,2CADoB,yDCiCTyG,GA7BQ7J,IAAMC,MAAK,WAAO,IAC9B2J,EAASjG,aAAY,SAACC,GAAD,OAAyBA,EAAMgG,SAApDA,MACA/C,EAAMiD,cAANjD,GAED5E,EAAWuB,cACjBiB,qBAAU,WAKN,OAJArE,QAAQC,IAAI,4BAEZ4B,EAAS+G,GAASnC,IAEX,WACHzG,QAAQC,IAAI,mCAEjB,CAAC4B,EAAU4E,IAEd,ICrBA2B,EACAC,EACAC,EDmBMpB,GCrBNkB,EDsBI,kBAAMvG,EEpBS,SAAC4E,GAAD,8CACnB,WACI5E,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuB2G,GAASG,QAAQnH,EAAO8E,GAF/C,QAEUvE,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,sBAAuBiC,IAQlDL,EAASJ,EAAwBS,EAAKP,QACtCE,EAAS+G,GAASnC,IAEHzG,QAAQC,IAAI,wBAAyBiC,IAlB5D,4CAsBA,SAACc,MAGD,WArCR,2CADmB,wDFoBA8F,CAAQrC,KCrB3B4B,EDsBI,SAACsB,GAAD,OAAqB9H,EGrBH,SAAC4E,EAAYmD,GAAb,8CACtB,WACI/H,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuB2G,GAASW,WAAW3H,EAAO8E,GAFlD,QAEUvE,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,yBAA0BiC,IAQrDL,EAASJ,EAAwBS,EAAKP,QACtCE,EAAS+G,GAASgB,IAEH5J,QAAQC,IAAI,2BAA4BiC,IAlB/D,4CAsBA,SAACc,MAGD,cArCR,2CADsB,wDHqBYsG,CAAWK,EAASlD,KCrBtD6B,EDsBI,SAACqB,GAAD,OAAqB9H,EItBH,SAAC4E,EAAYmD,GAAb,8CACtB,WACI/H,EACAyB,GAFJ,eAAAtB,EAAA,6DAQWL,EAAS2B,IAAW4C,QAAQxE,KAA5BC,MARX,SAUUC,EACFC,EADU,sBAEV,4BAAAG,EAAA,sEAEuB2G,GAASS,WAAWzH,EAAO8E,GAFlD,QAEUvE,EAFV,QAIaV,MAGUxB,QAAQC,IAAI,yBAA0BiC,IAQrDL,EAASJ,EAAwBS,EAAKP,QACtCE,EAAS+G,GAASgB,IAEH5J,QAAQC,IAAI,2BAA4BiC,IAlB/D,4CAsBA,SAACc,MAGD,cArCR,2CADsB,wDJsBYoG,CAAWO,EAASlD,KCrBhC,CACtB,CACIQ,MAAO,SAACY,EAAO9G,GAAR,OACH,yBAAKiH,IAAK,kBAAoBH,EAAO/D,MAAO,CAAC2D,MAAO,MAApD,aAEJS,OAAQ,SAACJ,EAAoBG,EAAYF,EAAWhH,GAA5C,OACJ,yBAAKiH,IAAK,iBAAmBF,EAASpB,IAAK5C,MAAO,CAAC2D,MAAO,MACrDK,EAASkB,YAItB,CACI/B,MAAO,SAACY,EAAO9G,GAAR,OACH,yBAAKiH,IAAK,gBAAkBH,EAAO/D,MAAO,CAAC2D,MAAO,MAAlD,WAEJS,OAAQ,SAACJ,EAAoBG,EAAYF,EAAWhH,GAA5C,OACJ,yBAAKiH,IAAK,eAAiBF,EAASpB,IAAK5C,MAAO,CAAC2D,MAAO,MACnDK,EAAS+B,UAKtB,CACI5C,MAAO,SAACY,EAAO9G,GAAR,OACH,yBAAKiH,IAAK,eAAiBH,EAAO/D,MAAO,CAAC2D,MAAO,MAAjD,UAEJS,OAAQ,SAACJ,EAAoBG,EAAYF,EAAWhH,GAA5C,OACJ,yBAAKiH,IAAK,cAAgBF,EAASpB,IAAK5C,MAAO,CAAC2D,MAAO,MAClDK,EAASS,SAItB,CACItB,MAAO,SAACY,EAAO9G,GAAR,OACH,yBAAKiH,IAAK,iBAAmBH,EAAO/D,MAAO,CAAC2D,MAAO,MAC/C,kBAAC,EAAD,CAAWrG,QAASgH,GAApB,SAGRF,OAAQ,SAACJ,EAAoBG,EAAYF,EAAWhH,GAA5C,OACJ,yBAAKiH,IAAK,gBAAkBF,EAASpB,IAAK5C,MAAO,CAAC2D,MAAO,MACrD,kBAAC,EAAD,CAAWrG,QAAS,kBAAMiH,EAAIP,EAASpB,OAAvC,OACA,kBAAC,EAAD,CAAWtF,QAAS,kBAAMkH,EAAOR,EAASpB,OAA1C,eDhBZ,OADe1G,QAAQC,IAAI,6BAA+BwG,GAEtD,6BACI,kBAAC,EAAD,CAAUS,MAAOA,EAAOhF,KAAMsH,EAAOvC,MAAO,cKpBzC6C,GAZG,WAGd,OADe9J,QAAQC,IAAI,oBAEvB,yCAGI,kBAAC,GAAD,QCFN8J,GAAS,CAAC,wCAAW,iCAAS,gEAAe,yDAAa,4BAE1DC,GAAU,SAACR,GACb,IAAMS,EAAMT,EAAMU,QAAO,SAACC,EAAKpB,GAAN,OAAeoB,GAAO,EAAIpB,EAAKR,QAAU,EAAIQ,EAAKR,SAAQ,GAC7E6B,EAAOnB,KAAKC,SAAWe,EACvBI,EAAMb,EAAMU,QAAO,SAACC,EAAiCpB,EAAMuB,GACzD,IAAMC,EAASJ,EAAIF,KAAO,EAAIlB,EAAKR,QAAU,EAAIQ,EAAKR,OACtD,MAAO,CAAC0B,IAAKM,EAAQ9D,GAAI8D,EAASH,EAAOE,EAAIH,EAAI1D,MAEnD,CAACwD,IAAK,EAAGxD,IAAK,IAGpB,OAFAzG,QAAQC,IAAI,SAAUgK,EAAKG,EAAMC,GAE1Bb,EAAMa,EAAI5D,GAAK,IAgFX+D,GA7EG,WAAO,IAAD,EACc3H,oBAAkB,GADhC,mBACb4H,EADa,KACFC,EADE,OAEM7H,oBAAkB,GAFxB,mBAEbgB,EAFa,KAENO,EAFM,KAIboF,EAASjG,aAAY,SAACC,GAAD,OAAyBA,EAAMgG,SAApDA,MACA/C,EAAMiD,cAANjD,GALa,EAOI5D,mBAAmB,CACvC6D,IAAK,OACLmC,aAAc,GAEdgB,OAAQ,cACRb,SAAU,gBACVT,MAAO,EACPoC,MAAO,EAEPzJ,KAAM,GACN0J,OAAQ,EACRC,QAAS,GAETC,QAAS,GACTC,QAAS,KArBO,mBAObhC,EAPa,KAOPiC,EAPO,KAwBdnJ,EAAWuB,cACjBiB,qBAAU,WAWN,OAVArE,QAAQC,IAAI,4BAER4D,IACAhC,EAAS+G,GAASnC,IAClBrC,GAAS,IAGbpE,QAAQC,IAAI,QAASuJ,GACjBA,EAAMyB,OAAS,GAAGD,EAAQhB,GAAQR,IAE/B,WACHxJ,QAAQC,IAAI,mCAEjB,CAAC4B,EAAU4E,EAAI+C,EAAO3F,IAazB,OADe7D,QAAQC,IAAI,oBAEvB,yCAGI,6BAAM8I,EAAKC,UACX,6BACI,kBAAC,EAAD,CAAW5H,QAAS,kBAAMsJ,GAAa,KAAvC,UAGHD,GACG,oCACI,6BAAM1B,EAAKc,QAEVE,GAAOpC,KAAI,SAACuD,EAAGZ,GAAJ,OACR,kBAAC,EAAD,CAAWtC,IAAK,SAAWsC,EAAGlJ,QAAS,cACnC8J,MAGR,6BAAK,kBAAC,EAAD,CAAW9J,QA7BjB,WACXsJ,GAAa,GAETlB,EAAMyB,OAAS,GACfD,EAAQhB,GAAQR,MAyBH,YC5EZhF,GAAO,CAChBe,MAAO,SACPb,SAAU,YACVD,QAAS,WACT0G,MAAO,SACP3C,MAAO,SACPC,MAAO,UAGE2C,GAAoB,CAC7B,CAAC3E,GAAI,EAAGQ,MAAO,QAASoE,KAAM7G,GAAKe,MAAO+F,OAAO,EAAMC,KAAM,kBAAM,kBAAC,EAAD,QACnE,CAAC9E,GAAI,EAAGQ,MAAO,WAAYoE,KAAM7G,GAAKE,SAAU4G,OAAO,EAAMC,KAAM,kBAAM,kBAAC,EAAD,QAKzE,CAAC9E,GAAI,EAAGQ,MAAO,UAAWoE,KAAM7G,GAAKC,QAAS6G,OAAO,EAAMC,KAAM,kBAAM,kBAAC,EAAD,QACvE,CAAC9E,GAAI,EAAGQ,MAAO,QAASoE,KAAM7G,GAAK2G,MAAOG,OAAO,EAAMC,KAAM,kBAAM,kBAAC,GAAD,QACnE,CAAC9E,GAAI,EAAGQ,MAAO,QAASoE,KAAM7G,GAAKgE,MAAOgD,OAAQ,OAAQF,OAAO,EAAMC,KAAM,kBAAM,kBAAC,GAAD,QACnF,CAAC9E,GAAI,EAAGQ,MAAO,QAASoE,KAAM7G,GAAKiE,MAAO+C,OAAQ,OAAQF,OAAO,EAAMC,KAAM,kBAAM,kBAAC,GAAD,QAEnF,CAAC9E,GAAI,KAAMQ,MAAO,WAAYsE,KAAM,kBAAM,4CClCxCE,GAAcL,GAAMzD,KAAI,SAAA+D,GAAC,OAC3B,kBAAC,EAAD,CACI1D,IAAK,WAAa0D,EAAEjF,GACpBlC,IAAKmH,EAAEL,MAAQ,KAAOK,EAAEF,OAAS,KAAO,IACxC1L,KAAM,WAAa4L,EAAEjF,IAEpBiF,EAAEzE,UAcI0E,GAVG,WAGd,OADe3L,QAAQC,IAAI,oBAEvB,oCACKwL,KCfPG,GAAeR,GAAMzD,KAAI,SAAC+D,GAAD,OAC3B,kBAAC,IAAD,CACI1D,IAAK,SAAW0D,EAAEjF,GAClB4E,KAAMK,EAAEL,MAASK,EAAEL,MAAQK,EAAEF,QAAU,IACvCF,MAAOI,EAAEJ,MACTpD,OAAQwD,EAAEH,UAcHM,GAVA,WAGX,OADe7L,QAAQC,IAAI,iBAEvB,kBAAC,IAAD,KACK2L,KCDEE,GAZF,WAGT,OADe9L,QAAQC,IAAI,eAEvB,oCACoB,kBAAC,GAAD,MAEhB,kBAAC,GAAD,Q,kBCPC8L,GAAiC,CAC1ChL,SAAS,EACTQ,SAAS,EACTC,MAAO,ICHEwK,GAAuC,CAChDjL,SAAS,EACTQ,SAAS,EACTC,MAAO,ICeEyK,GAAqC,CAC9ClL,SAAS,EACTQ,SAAS,EACTC,MAAO,GAEPE,KAAM,CACFgF,IAAK,IACLlG,MAAO,GACPkC,YAAY,EACZwJ,SAAS,EAETxG,KAAM,OACNyG,UAAU,EAEVxK,MAAO,GACPyK,eAAgB,EAEhBtB,QAAS,IAAIuB,KACbtB,QAAS,IAAIsB,OCrBRC,GAAiC,CAC1CxF,MAAO,ICDEyF,GAAiC,CAC1C/C,MAAO,ICbLgD,GAAWC,aAAgB,CAC7BhJ,MCPwB,WAAuE,IAAtEiJ,EAAqE,uDAA7DX,GAAgBY,EAA6C,uCAC9F,OAAQA,EAAOzL,MACX,IAAK,kBACD,OAAO,eACAwL,EADP,CAEIlL,MAAOmL,EAAOnL,MACdT,SAAS,EACTQ,SAAS,IAGjB,IAAK,oBACD,OAAO,eACAmL,EADP,CAEIlL,MAAO,GACPT,QAAS4L,EAAO5L,QAChBQ,SAAS,IAGjB,IAAK,oBACD,OAAO,eACAmL,EADP,CAEIlL,MAAO,GACPT,SAAS,EACTQ,QAASoL,EAAOpL,UAIxB,QACI,OAAOmL,IDpBftH,SEPA,WAAgF,IAA/EsH,EAA8E,uDAAtEV,GAAmBW,EAAmD,uCAC3E,OAAQA,EAAOzL,MACX,IAAK,qBACD,OAAO,eACAwL,EADP,CAEIlL,MAAOmL,EAAOnL,MACdT,SAAS,EACTQ,SAAS,IAGjB,IAAK,uBACD,OAAO,eACAmL,EADP,CAEIlL,MAAO,GACPT,QAAS4L,EAAO5L,QAChBQ,SAAS,IAGjB,IAAK,uBACD,OAAO,eACAmL,EADP,CAEIlL,MAAO,GACPT,SAAS,EACTQ,QAASoL,EAAOpL,UAIxB,QACI,OAAOmL,IFnBnBxG,QGTA,WAA6E,IAA5EwG,EAA2E,uDAAnET,GAAkBU,EAAiD,uCACxE,OAAQA,EAAOzL,MACX,IAAK,mBACD,OAAO,eACAwL,EADP,CAEIhL,KAAMiL,EAAOjL,OAGrB,IAAK,oBACD,OAAO,eACAgL,EADP,CAEIhL,KAAK,eACEgL,EAAMhL,KADT,CAEAC,MAAOgL,EAAOhL,UAK1B,QACI,OAAO+K,IHRnB5F,MIXA,WAAuE,IAAtE4F,EAAqE,uDAA7DJ,GAAgBK,EAA6C,uCAClE,OAAQA,EAAOzL,MACX,IAAK,kBACD,OAAO,eACAwL,EADP,CAEI5F,MAAO6F,EAAO7F,QAItB,QACI,OAAO4F,IJEnBlD,MKZA,WAAuE,IAAtEkD,EAAqE,uDAA7DH,GAAgBI,EAA6C,uCAClE,OAAQA,EAAOzL,MACX,IAAK,kBACD,OAAO,eACAwL,EADP,CAEIlD,MAAOmD,EAAOnD,QAItB,QACI,OAAOkD,MLMjBlJ,GAAQoJ,aAAYJ,GAAUK,aAAgBC,OAErCtJ,MAMXuJ,OAAOvJ,MAAQA,GMnBnB,IAcewJ,GAdH,WAGR,OADehN,QAAQC,IAAI,cAEvB,yBAAKC,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUsD,MAAOA,IACb,kBAAC,GAAD,UCJAyJ,QACW,cAA7BF,OAAOG,SAASC,UAEe,UAA7BJ,OAAOG,SAASC,UAEhBJ,OAAOG,SAASC,SAASC,MACvB,2DCZNC,IAASnF,OACL,kBAAC,IAAMoF,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvM,GACLxB,QAAQwB,MAAMA,EAAMW,c","file":"static/js/main.6a766aec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputNya\":\"InputNya_inputNya__rPNjN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonNya\":\"ButtonNya_buttonNya__3htRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"LinkNya_link__LkYaC\"};","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./InputNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type InputNyaPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & { info?: string };\r\n\r\nconst InputNya: React.FC<InputNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render InputNya-' + info);\r\n    return <input className={s.inputNya} {...props}/>;\r\n});\r\n\r\nexport default InputNya;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./ButtonNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type ButtonNyaPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n    & { info?: string };\r\n\r\nconst ButtonNya: React.FC<ButtonNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render ButtonNya-' + info);\r\n    return <button className={s.buttonNya} {...props}/>;\r\n});\r\n\r\nexport default ButtonNya;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype LoginPropsType = {\r\n    email: string;\r\n    setEmail: (email: ChangeEvent<HTMLInputElement>) => void;\r\n    pass: string;\r\n    setPass: (pass: ChangeEvent<HTMLInputElement>) => void;\r\n    remember: boolean;\r\n    setRemember: (remember: ChangeEvent<HTMLInputElement>) => void;\r\n\r\n    signIn: () => void;\r\n    loading: boolean;\r\n};\r\n\r\nconst Login: React.FC<LoginPropsType> = React.memo((\r\n    {email, setEmail, pass, setPass, remember, setRemember, signIn, loading}\r\n) => {\r\n\r\n    DEV_VERSION && console.log('render Login');\r\n    return (\r\n        <>\r\n            <div><InputNya info={'email'} value={email} onChange={setEmail}/></div>\r\n            <div><InputNya info={'pass'} value={pass} onChange={setPass}/></div>\r\n            <div>\r\n                <label>\r\n                    <InputNya type={'checkbox'} info={'remember'} checked={remember} onChange={setRemember}/>\r\n                    remember me\r\n                </label>\r\n            </div>\r\n            <div>forgot? (will be link)</div>\r\n            <div><ButtonNya info={'sign in'} onClick={signIn} disabled={loading}>sign in</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Login;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type LoginActionsType = InferActionsType<typeof LoginActions>;\r\n\r\nexport const LoginActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'login/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'login/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'login/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\nimport {UserType} from \"./ProfileInitState\";\r\n\r\nexport type ProfileActionsType = InferActionsType<typeof ProfileActions>;\r\n\r\nexport const ProfileActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'profile/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'profile/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'profile/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n    setUser: (user: UserType) => ({\r\n        type: 'profile/SET_USER',\r\n        user,\r\n    } as const),\r\n    setToken: (token: string) => ({\r\n        type: 'profile/SET_TOKEN',\r\n        token,\r\n    } as const),\r\n\r\n};\r\n","import {AppStoreType} from \"./store\";\r\nimport {DEV_VERSION} from \"../../config\";\r\nimport {ProfileActions} from \"../../cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\n\r\nexport type ReturnVoid = void;\r\nexport type ExtraArgumentNya = {};\r\nexport type GetAppStoreType = () => AppStoreType;\r\n\r\nexport const tryCatch = async (\r\n    dispatch: any,\r\n    logic: () => void,\r\n    setError: (error: string) => void,\r\n    info: string\r\n) => {\r\n    try {\r\n        await logic();\r\n\r\n    } catch (e) {\r\n        const error = e.response ? e.response.data.error : (e.message + ', more details in the console');\r\n        if (e.response) dispatch(ProfileActions.setToken(e.response.data.token));\r\n        setError(error);\r\n\r\n        DEV_VERSION && console.log('Nya, ' + info + ' Error!', {...e})\r\n    }\r\n};\r\n","import axios from \"axios\";\r\nimport {DEV_VERSION} from \"../../config\";\r\n\r\nexport const baseURL = DEV_VERSION\r\n    ? 'http://localhost:7542/1.0/'\r\n    : 'https://cards-nya-back.herokuapp.com/1.0/';\r\n\r\nexport const instance = axios.create({\r\n    baseURL\r\n});\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {UserType} from \"../../a-7-profile/p-2-bll/ProfileInitState\";\r\n\r\nexport type SignInDataType = UserType & { error: string; };\r\n\r\nexport const LoginAPI = {\r\n    signIn: async (email: string, password: string, rememberMe: boolean) => {\r\n        const response = await instance.post<SignInDataType>('/auth/login', {email, password, rememberMe});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport Login from \"./Login\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signIn} from \"../l-2-bll/loginThunk\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\n\r\nconst LoginContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>(DEV_VERSION ? 'nya-admin@nya.nya' : '');\r\n    const [pass, setPass] = useState<string>(DEV_VERSION ? '1qazxcvBG' : '');\r\n    const [remember, setRemember] = useState<boolean>(false);\r\n\r\n    const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]\r\n    );\r\n    const setPassCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPass(e.currentTarget.value),\r\n        [setPass]\r\n    );\r\n    const setRememberCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setRemember(e.currentTarget.checked),\r\n        [setRemember]\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const signInCallback = useCallback(\r\n        () => dispatch(signIn(email, pass, remember)),\r\n        [email, pass, remember, dispatch]\r\n    );\r\n    const {loading} = useSelector((store: AppStoreType) => store.login);\r\n\r\n    DEV_VERSION && console.log('render LoginContainer');\r\n    return (\r\n        <Login\r\n            email={email} setEmail={setEmailCallback}\r\n            pass={pass} setPass={setPassCallback}\r\n            remember={remember} setRemember={setRememberCallback}\r\n            signIn={signInCallback}\r\n            loading={loading}\r\n        />\r\n    );\r\n});\r\n\r\nexport default LoginContainer;\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {LoginActions, LoginActionsType} from \"./LoginActions\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {LoginAPI} from \"../l-3-dal/LoginAPI\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../a-7-profile/p-2-bll/ProfileActions\";\r\n\r\nexport const signIn =\r\n    (email: string, password: string, rememberMe: boolean)\r\n        : ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, LoginActionsType> =>\r\n        async (\r\n            dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, LoginActionsType | ProfileActionsType>,\r\n            getStore: GetAppStoreType\r\n        ) => {\r\n            // nekoClear(dispatch);\r\n            // signInLoading(dispatch, true);\r\n            dispatch(LoginActions.setLoading(true));\r\n\r\n            await tryCatch(\r\n                dispatch,\r\n                async () => {\r\n                    const data = await LoginAPI.signIn(email, password, rememberMe);\r\n\r\n                    if (data.error) {\r\n                        dispatch(LoginActions.setError(data.error));\r\n\r\n                        DEV_VERSION && console.log('Nya, Login Error!', data);\r\n\r\n                    } else {\r\n                        // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                        // dispatch(nekoSetName(data.name));\r\n                        // signInSuccess(dispatch, true);\r\n                        dispatch(LoginActions.setSuccess(true));\r\n                        dispatch(ProfileActions.setUser(data)); // error?\r\n\r\n                        DEV_VERSION && console.log('Nya, Login Success!', data)\r\n                    }\r\n                },\r\n                (e) => dispatch(LoginActions.setError(e)),\r\n                \"Login\"\r\n            );\r\n        };\r\n","import React from \"react\";\r\nimport {NavLink, NavLinkProps} from \"react-router-dom\";\r\nimport s from \"./LinkNya.module.css\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type LinkNyaPropsType = NavLinkProps & { info?: string };\r\n\r\nconst LinkNya: React.FC<LinkNyaPropsType> = React.memo((\r\n    {\r\n        info,\r\n        ...props\r\n    }\r\n) => {\r\n\r\n    DEV_VERSION && info && console.log('render LinkNya-' + info);\r\n    return <NavLink className={s.link} {...props}/>;\r\n});\r\n\r\nexport default LinkNya;\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\nexport type StatusPropsType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n\r\n    first: boolean;\r\n    info?: string;\r\n}\r\n\r\nconst Status: React.FC<StatusPropsType> = React.memo(({loading, success, error, first, info}) => {\r\n\r\n    DEV_VERSION && info && console.log('render Status-' + info);\r\n    if (first) return <div><br/></div>;\r\n    return (\r\n        <>\r\n            {loading\r\n                ? <div style={{color: 'orange'}}>loading...</div>\r\n                : error\r\n                    ? <div style={{color: 'red'}}>{error}</div>\r\n                    : success\r\n                        ? <div style={{color: 'lime'}}>Success!</div>\r\n                        : <div><br/></div>\r\n            }\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Status;\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype LoginStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst LoginStatus: React.FC<LoginStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.login);\r\n\r\n    DEV_VERSION && console.log('render LoginStatus');\r\n    return <Status loading={loading} success={success} error={error} info={'login'} first={first}/>\r\n});\r\n\r\nexport default LoginStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport LoginContainer from \"./LoginContainer\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport LoginStatus from \"./LoginStatus\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginActions} from \"../l-2-bll/LoginActions\";\r\n\r\nconst LoginPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.login);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first && success) dispatch(LoginActions.setSuccess(false));\r\n        if (first && error) dispatch(LoginActions.setError(''));\r\n        if (first) setFirst(false);\r\n\r\n        if (success && !first && !redirect) setTimeout(() => setRedirect(true), 500);\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log('render LoginPage');\r\n    if (redirect && success && !first) return <Redirect to={PATH.PROFILE}/>;\r\n    return (\r\n        <div>\r\n            login\r\n            <LoginStatus first={first}/>\r\n            <LoginContainer/>\r\n            <LinkNya to={PATH.REGISTER} info={'register in login'}>register</LinkNya>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport InputNya from \"../../../../cnf-0-common/c-1-ui/input/InputNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype RegisterPropsType = {\r\n    email: string;\r\n    setEmail: (email: ChangeEvent<HTMLInputElement>) => void;\r\n    pass: string;\r\n    setPass: (pass: ChangeEvent<HTMLInputElement>) => void;\r\n    pass2: string;\r\n    setPass2: (pass2: ChangeEvent<HTMLInputElement>) => void;\r\n\r\n    signUp: () => void;\r\n    loading: boolean\r\n};\r\n\r\nconst Register: React.FC<RegisterPropsType> = React.memo((\r\n    {email, setEmail, pass, setPass, pass2, setPass2, signUp, loading}\r\n) => {\r\n\r\n    DEV_VERSION && console.log('render Register');\r\n    return (\r\n        <>\r\n            <div><InputNya info={'email'} value={email} onChange={setEmail}/></div>\r\n            <div><InputNya info={'pass'} value={pass} onChange={setPass}/></div>\r\n            <div><InputNya info={'pass confirm'} value={pass2} onChange={setPass2}/></div>\r\n            <div><ButtonNya info={'sign up'} onClick={signUp} disabled={loading}>sign up</ButtonNya></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Register;\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\n\r\nexport type RegisterActionsType = InferActionsType<typeof RegisterActions>;\r\n\r\nexport const RegisterActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'register/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'register/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'register/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n};\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nexport type SignInDataType = {\r\n    success: boolean;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const RegisterAPI = {\r\n    signUp: async (email: string, password: string) => {\r\n        const response = await instance.post<SignInDataType>('/auth/register', {email, password});\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport Register from \"./Register\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {signUp} from \"../r-2-bll/registerThunk\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\n\r\nconst RegisterContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>('');\r\n    const [pass, setPass] = useState<string>('');\r\n    const [pass2, setPass2] = useState<string>('');\r\n\r\n    const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]\r\n    );\r\n    const setPassCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPass(e.currentTarget.value),\r\n        [setPass]\r\n    );\r\n    const setPassCallback2 = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPass2(e.currentTarget.value),\r\n        [setPass2]\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n    const signUpCallback = useCallback(\r\n        () => dispatch(signUp(email, pass, pass2)),\r\n        [email, pass, pass2, dispatch]\r\n    );\r\n    const {loading} = useSelector((store: AppStoreType) => store.register);\r\n\r\n    DEV_VERSION && console.log('render RegisterContainer');\r\n    return (\r\n        <Register\r\n            email={email} setEmail={setEmailCallback}\r\n            pass={pass} setPass={setPassCallback}\r\n            pass2={pass2} setPass2={setPassCallback2}\r\n            signUp={signUpCallback}\r\n            loading={loading}\r\n        />\r\n    );\r\n});\r\n\r\nexport default RegisterContainer;\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {RegisterActions, RegisterActionsType} from \"./RegisterActions\";\r\nimport {RegisterAPI} from \"../r-3-dal/RegisterAPI\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nexport const signUp =\r\n    (email: string, password: string, pass2: string)\r\n        : ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, RegisterActionsType> =>\r\n        async (\r\n            dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, RegisterActionsType>,\r\n            getStore: GetAppStoreType\r\n        ) => {\r\n            // nekoClear(dispatch);\r\n            // signInLoading(dispatch, true);\r\n            dispatch(RegisterActions.setLoading(true));\r\n\r\n            await tryCatch(\r\n                dispatch,\r\n                async () => {\r\n                    if (password !== pass2) dispatch(RegisterActions.setError('Passwords don\\'t match!'));\r\n                    else {\r\n\r\n                        const data = await RegisterAPI.signUp(email, password);\r\n\r\n                        if (data.error) {\r\n                            dispatch(RegisterActions.setError(data.error));\r\n\r\n                            DEV_VERSION && console.log('Nya, Register Error!', data);\r\n\r\n                        } else {\r\n                            // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                            // dispatch(nekoSetName(data.name));\r\n                            // signInSuccess(dispatch, true);\r\n                            dispatch(RegisterActions.setSuccess(true));\r\n\r\n                            DEV_VERSION && console.log('Nya, Register Success!', data)\r\n                        }\r\n                    }\r\n                },\r\n                (e) => dispatch(RegisterActions.setError(e)),\r\n                \"Register\"\r\n            );\r\n        };\r\n","import React from \"react\";\r\nimport Status from \"../../../../cnf-0-common/c-1-ui/status/Status\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\ntype RegisterStatusPropsType = {\r\n    first: boolean;\r\n}\r\n\r\nconst RegisterStatus: React.FC<RegisterStatusPropsType> = React.memo(({first}) => {\r\n    const {loading, success, error} = useSelector((store: AppStoreType) => store.register);\r\n\r\n    DEV_VERSION && console.log('render RegisterStatus');\r\n    return <Status loading={loading} success={success} error={error} info={'register'} first={first}/>\r\n});\r\n\r\nexport default RegisterStatus;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport RegisterContainer from \"./RegisterContainer\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\nimport RegisterStatus from \"./RegisterStatus\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RegisterActions} from \"../r-2-bll/RegisterActions\";\r\n\r\nconst RegisterPage = () => {\r\n    const {success, error} = useSelector((store: AppStoreType) => store.register);\r\n    const [redirect, setRedirect] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if (first && success) dispatch(RegisterActions.setSuccess(false));\r\n        if (first && error) dispatch(RegisterActions.setError(''));\r\n        if (first) setFirst(false);\r\n\r\n        if (success && !first && !redirect) setTimeout(() => setRedirect(true), 500);\r\n    }, [first, success, error, dispatch, setFirst, redirect, setRedirect]);\r\n\r\n    DEV_VERSION && console.log('render RegisterPage');\r\n    if (redirect && success && !first) return <Redirect to={PATH.LOGIN}/>;\r\n    return (\r\n        <div>\r\n            register\r\n            <RegisterStatus first={first}/>\r\n            <RegisterContainer/>\r\n            <LinkNya to={PATH.LOGIN} info={'login in register'}>login</LinkNya>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\n\r\nexport type SignInDataType = {\r\n    success: boolean;\r\n\r\n    error: string;\r\n    token: string;\r\n}\r\n\r\nexport const ProfileAPI = {\r\n    updateUser: async (token: string, name: string, avatar: string) => {\r\n        const response = await instance.put<SignInDataType>('/auth/me', {token, name, avatar});\r\n\r\n        return response.data;\r\n    },\r\n    getUsers: async (token: string) => {\r\n        const response = await instance.get<SignInDataType>(`/social/users?token=${token}`);\r\n\r\n        return response.data;\r\n    },\r\n    sendGeneralChatMessage: async (token: string) => {\r\n        const response = await instance.post<SignInDataType>('/social/general/message',\r\n            {token, message: 'some message'});\r\n\r\n        return response.data;\r\n    },\r\n    getGeneralChatMessages: async (token: string) => {\r\n        const response = await instance.get<SignInDataType>(`/social/general/message?token=${token}`);\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {updateUser} from \"../p-2-bll/updateUserThunk\";\r\nimport {getUsers} from \"../p-2-bll/getUsersThunk\";\r\nimport { sendGeneralChatMessage } from \"../p-2-bll/sendGeneralChatMessageThunk\";\r\nimport {getGeneralChatMessages} from \"../p-2-bll/getGeneralChatMessagesThunk\";\r\n\r\nconst ProfilePage = () => {\r\n    const {user} = useSelector((store: AppStoreType) => store.profile);\r\n\r\n    const dispatch = useDispatch();\r\n    const update = () => dispatch(updateUser('nya', 'some avatar'));\r\n    const get = () => dispatch(getUsers());\r\n    const send = () => dispatch(sendGeneralChatMessage());\r\n    const getMessages = () => dispatch(getGeneralChatMessages());\r\n\r\n    DEV_VERSION && console.log('render ProfilePage');\r\n    return (\r\n        <div>\r\n            ProfilePage\r\n            <div>{user.name}</div>\r\n            <div>\r\n                <ButtonNya onClick={update}>set name</ButtonNya>\r\n                <ButtonNya onClick={get}>get users</ButtonNya>\r\n                <ButtonNya onClick={send}>send message</ButtonNya>\r\n                <ButtonNya onClick={getMessages}>get messages</ButtonNya>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"./ProfileActions\";\r\nimport {ProfileAPI} from \"../p-3-dal/ProfileAPI\";\r\n\r\nexport const updateUser = (name: string, avatar: string): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await ProfileAPI.updateUser(token, name, avatar);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, updatePack Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n\r\n                    DEV_VERSION && console.log('Nya, updateUser Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"updateUser\"\r\n        );\r\n    };\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"./ProfileActions\";\r\nimport {ProfileAPI} from \"../p-3-dal/ProfileAPI\";\r\n\r\nexport const getUsers = (): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await ProfileAPI.getUsers(token);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, getUsers Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n\r\n                    DEV_VERSION && console.log('Nya, getUsers Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"getUsers\"\r\n        );\r\n    };\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"./ProfileActions\";\r\nimport {ProfileAPI} from \"../p-3-dal/ProfileAPI\";\r\n\r\nexport const sendGeneralChatMessage = (): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await ProfileAPI.sendGeneralChatMessage(token);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, sendGeneralChatMessage Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n\r\n                    DEV_VERSION && console.log('Nya, sendGeneralChatMessage Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"sendGeneralChatMessage\"\r\n        );\r\n    };\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"./ProfileActions\";\r\nimport {ProfileAPI} from \"../p-3-dal/ProfileAPI\";\r\n\r\nexport const getGeneralChatMessages = (): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await ProfileAPI.getGeneralChatMessages(token);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, getGeneralChatMessages Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n\r\n                    DEV_VERSION && console.log('Nya, getGeneralChatMessages Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"getGeneralChatMessages\"\r\n        );\r\n    };\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {PackType} from \"../p-2-bll/PacksInitState\";\r\n\r\nexport type DataType = {\r\n    cardPacks: PackType[];\r\n\r\n    success: boolean;\r\n\r\n    token: string;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const PacksAPI = {\r\n    getPacks: async (token: string) => {\r\n        const response = await instance.get<DataType>(\r\n            `/cards/pack?token=${token}`\r\n            + `&pageCount=1000`\r\n            // + `&user_id=5eb543f6bea3ad21480f1ee7`\r\n        );\r\n\r\n        return response.data;\r\n    },\r\n    addPack: async (token: string) => {\r\n        const response = await instance.post<DataType>(`/cards/pack`, {\r\n            token,\r\n            cardsPack: {\r\n                deckCover: 'some cover'\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    updatePack: async (token: string, id: string) => {\r\n        const response = await instance.put<DataType>(`/cards/pack`, {\r\n            token,\r\n            cardsPack: {\r\n                _id: id,\r\n                name: 'update new',\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    deletePack: async (token: string, id: string) => {\r\n        const response = await instance.delete<DataType>(`/cards/pack?token=${token}&id=${id}`);\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\nimport {PackType} from \"./PacksInitState\";\r\n\r\nexport type PacksActionsType = InferActionsType<typeof PacksActions>;\r\n\r\nexport const PacksActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'packs/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'packs/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'packs/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n    setPacks: (packs: PackType[]) => ({\r\n        type: 'packs/SET_PACKS',\r\n        packs,\r\n    } as const),\r\n\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {PacksActions, PacksActionsType} from \"./PacksActions\";\r\n\r\nexport const getPacks = (): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType | PacksActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType | PacksActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await PacksAPI.getPacks(token);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, getPacks Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    dispatch(PacksActions.setPacks(data.cardPacks));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n\r\n                    DEV_VERSION && console.log('Nya, getPacks Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"getPacks\"\r\n        );\r\n    };\r\n","import React, {CSSProperties, ReactNode} from 'react';\r\n\r\nexport type TableNyaModelType = {\r\n    title: (index: number, loading: boolean) => ReactNode;\r\n    render: (dataItem: any, modelIndex: number, dataIndex: number, loading: boolean) => ReactNode;\r\n}\r\n\r\nexport type TableNyaPropsType = {\r\n    loading?: boolean; title?: string; model: TableNyaModelType[]; data: any;\r\n\r\n    headerStyle?: CSSProperties, tableStyle?: CSSProperties, rowsStyle?: CSSProperties, rowStyle?: CSSProperties,\r\n}\r\n\r\nconst TableNya: React.FC<TableNyaPropsType> = (\r\n    {\r\n        loading = false, title = 'table', model, data,\r\n\r\n        headerStyle, tableStyle,\r\n        rowsStyle, rowStyle,\r\n    }\r\n) => {\r\n\r\n    return (\r\n        <div style={{margin: '0 10px', ...tableStyle}}>\r\n            {title}\r\n\r\n            <div style={{border: '1px solid red', width: '100%', display: \"flex\", ...headerStyle}}>\r\n                {model.map((m, index) => m.title(index, loading))}\r\n            </div>\r\n\r\n            <div style={{border: '1px solid lime', width: '100%', ...rowsStyle}}>\r\n                {data.map((dataItem: any, dataIndex: number) => (\r\n                    <div\r\n                        key={title + '-row-' + (dataItem._id || dataIndex)}\r\n                        style={{width: '100%', display: \"flex\", ...rowStyle}}\r\n                    >\r\n                        {model.map((m, modelIndex) =>\r\n                            m.render(dataItem, modelIndex, dataIndex, loading))}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableNya;\r\n","import React, {useEffect} from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {getPacks} from \"../p-2-bll/getPacksThunk\";\r\nimport TableNya from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport {packsModel} from \"./PacksModel\";\r\nimport {addPack} from \"../p-2-bll/addPackThunk\";\r\nimport {deletePack} from \"../p-2-bll/deletePackThunk\";\r\nimport {updatePack} from \"../p-2-bll/updatePackThunk\";\r\n\r\nconst PacksContainer = React.memo(() => {\r\n    const {packs} = useSelector((store: AppStoreType) => store.packs);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('PacksContainer useEffect');\r\n\r\n        dispatch(getPacks());\r\n\r\n        return () => {\r\n            console.log('PacksContainer useEffect off');\r\n        }\r\n    }, [dispatch]);\r\n\r\n    const model = packsModel(\r\n        () => dispatch(addPack()),\r\n        (id: string) => dispatch(deletePack(id)),\r\n        (id: string) => dispatch(updatePack(id)),\r\n    );\r\n\r\n    DEV_VERSION && console.log('render PacksContainer');\r\n    return (\r\n        <div>\r\n            <TableNya model={model} data={packs} title={'CardPacks'}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default PacksContainer;\r\n","import React from \"react\";\r\nimport {TableNyaModelType} from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport {PackType} from \"../p-2-bll/PacksInitState\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {PATH} from \"../../../../cnf-1-main/m-1-ui/main/routes/Pages\";\r\n\r\nexport const packsModel = (\r\n    add: () => void,\r\n    del: (id: string) => void,\r\n    update: (id: string) => void,\r\n): TableNyaModelType[] => [\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'name-title-' + index} style={{width: 150}}>Name</div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'name-cell-' + dataItem._id} style={{width: 150}}>\r\n                {dataItem.name}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'grade-title-' + index} style={{width: 150}}>Grade</div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'grade-cell-' + dataItem._id} style={{width: 150}}>\r\n                {dataItem.grade}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'buttons-title-' + index} style={{width: 150}}>\r\n                <ButtonNya onClick={add}>add</ButtonNya>\r\n            </div>\r\n        ),\r\n        render: (dataItem: PackType, modelIndex, dataIndex, loading) => (\r\n            <div key={'buttons-cell-' + dataItem._id} style={{width: 250}}>\r\n                <ButtonNya onClick={() => del(dataItem._id)}>del</ButtonNya>\r\n                <ButtonNya onClick={() => update(dataItem._id)}>update</ButtonNya>\r\n                <LinkNya to={PATH.CARDS + '/' + dataItem._id}>cards</LinkNya>\r\n                <LinkNya to={PATH.LEARN + '/' + dataItem._id}>learn</LinkNya>\r\n            </div>\r\n        )\r\n    },\r\n\r\n];\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {getPacks} from \"./getPacksThunk\";\r\n\r\nexport const addPack = (): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await PacksAPI.addPack(token);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, addPack Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n                    dispatch(getPacks());\r\n\r\n                    DEV_VERSION && console.log('Nya, addPack Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"addPack\"\r\n        );\r\n    };\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {getPacks} from \"./getPacksThunk\";\r\n\r\nexport const deletePack = (id: string): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await PacksAPI.deletePack(token, id);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, deletePack Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n                    dispatch(getPacks());\r\n\r\n                    DEV_VERSION && console.log('Nya, deletePack Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"deletePack\"\r\n        );\r\n    };\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {PacksAPI} from \"../p-3-dal/PacksAPI\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {getPacks} from \"./getPacksThunk\";\r\n\r\nexport const updatePack = (id: string): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await PacksAPI.updatePack(token, id);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, updatePack Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n                    dispatch(getPacks());\r\n\r\n                    DEV_VERSION && console.log('Nya, updatePack Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"updatePack\"\r\n        );\r\n    };\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport PacksContainer from \"./PacksContainer\";\r\n\r\nconst PacksPage = () => {\r\n\r\n    DEV_VERSION && console.log('render PacksPage');\r\n    return (\r\n        <div>\r\n            PacksPage\r\n\r\n            <PacksContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PacksPage;\r\n","import {instance} from \"../../../../cnf-1-main/m-3-dal/instance\";\r\nimport {CardType} from \"../c-2-bll/CardsInitState\";\r\n\r\nexport type DataType = {\r\n    cards: CardType[];\r\n\r\n    success: boolean;\r\n\r\n    token: string;\r\n\r\n    error: string;\r\n}\r\n\r\nexport const CardsAPI = {\r\n    getCards: async (token: string, cardsPack_id: string) => {\r\n        const response = await instance.get<DataType>(`/cards/card?token=${token}&cardsPack_id=${cardsPack_id}`);\r\n\r\n        return response.data;\r\n    },\r\n    addCard: async (token: string, cardsPack_id: string) => {\r\n        const response = await instance.post<DataType>(`/cards/card`, {\r\n            token,\r\n            card: {\r\n                cardsPack_id,\r\n                question: 'new!',\r\n                grade: Math.random() * 5,\r\n                questionImg: 'some img'\r\n            },\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    updateCard: async (token: string, id: string) => {\r\n        const response = await instance.put<DataType>(`/cards/card`, {\r\n            token,\r\n            card: {\r\n                _id: id,\r\n                question: 'updated question',\r\n                answerImg: 'some answer img'\r\n            }\r\n        });\r\n\r\n        return response.data;\r\n    },\r\n    deleteCard: async (token: string, id: string) => {\r\n        const response = await instance.delete<DataType>(`/cards/card?token=${token}&id=${id}`);\r\n\r\n        return response.data;\r\n    },\r\n\r\n};\r\n","import {InferActionsType} from \"../../../../cnf-1-main/m-2-bll/actions\";\r\nimport {CardType} from \"./CardsInitState\";\r\n\r\nexport type CardsActionsType = InferActionsType<typeof CardsActions>;\r\n\r\nexport const CardsActions = {\r\n    setLoading: (loading: boolean) => ({\r\n        type: 'cards/SET_LOADING',\r\n        loading,\r\n    } as const),\r\n    setSuccess: (success: boolean) => ({\r\n        type: 'cards/SET_SUCCESS',\r\n        success,\r\n    } as const),\r\n    setError: (error: string) => ({\r\n        type: 'cards/SET_ERROR',\r\n        error,\r\n    } as const),\r\n\r\n    setCards: (cards: CardType[]) => ({\r\n        type: 'cards/SET_CARDS',\r\n        cards,\r\n    } as const),\r\n\r\n};\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {CardsActions, CardsActionsType} from \"./CardsActions\";\r\n\r\nexport const getCards = (id: string): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType | CardsActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType | CardsActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await CardsAPI.getCards(token, id);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, getCards Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    dispatch(CardsActions.setCards(data.cards));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n\r\n                    DEV_VERSION && console.log('Nya, getCards Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"getCards\"\r\n        );\r\n    };\r\n","import React, {useEffect} from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport TableNya, {TableNyaModelType} from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport {getCards} from \"../c-2-bll/getCardsThunk\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {cardsModel} from \"./CardsModel\";\r\nimport {addCard} from \"../c-2-bll/addCardThunk\";\r\nimport {deleteCard} from \"../c-2-bll/deleteCardThunk\";\r\nimport {updateCard} from \"../c-2-bll/updateCardThunk\";\r\n\r\nconst CardsContainer = React.memo(() => {\r\n    const {cards} = useSelector((store: AppStoreType) => store.cards);\r\n    const {id} = useParams();\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('PacksContainer useEffect');\r\n\r\n        dispatch(getCards(id));\r\n\r\n        return () => {\r\n            console.log('PacksContainer useEffect off');\r\n        }\r\n    }, [dispatch, id]);\r\n\r\n    const model: TableNyaModelType[] = cardsModel(\r\n        () => dispatch(addCard(id)),\r\n        (card_id: string) => dispatch(deleteCard(card_id, id)),\r\n        (card_id: string) => dispatch(updateCard(card_id, id)),\r\n    );\r\n\r\n    DEV_VERSION && console.log('render CardsContainer, id:' + id);\r\n    return (\r\n        <div>\r\n            <TableNya model={model} data={cards} title={'Cards'}/>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default CardsContainer;\r\n","import React from \"react\";\r\nimport {TableNyaModelType} from \"../../../../cnf-0-common/c-1-ui/table/TableNya\";\r\nimport ButtonNya from \"../../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {CardType} from \"../c-2-bll/CardsInitState\";\r\n\r\nexport const cardsModel = (\r\n    add: () => void,\r\n    del: (id: string) => void,\r\n    update: (id: string) => void,\r\n): TableNyaModelType[] => [\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'question-title-' + index} style={{width: 150}}>question</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={'question-cell-' + dataItem._id} style={{width: 150}}>\r\n                {dataItem.question}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'answer-title-' + index} style={{width: 150}}>answer</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={'answer-cell-' + dataItem._id} style={{width: 150}}>\r\n                {dataItem.answer}\r\n            </div>\r\n        )\r\n    },\r\n\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'grade-title-' + index} style={{width: 150}}>Grade</div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={'grade-cell-' + dataItem._id} style={{width: 150}}>\r\n                {dataItem.grade}\r\n            </div>\r\n        )\r\n    },\r\n    {\r\n        title: (index, loading) => (\r\n            <div key={'buttons-title-' + index} style={{width: 150}}>\r\n                <ButtonNya onClick={add}>add</ButtonNya>\r\n            </div>\r\n        ),\r\n        render: (dataItem: CardType, modelIndex, dataIndex, loading) => (\r\n            <div key={'buttons-cell-' + dataItem._id} style={{width: 250}}>\r\n                <ButtonNya onClick={() => del(dataItem._id)}>del</ButtonNya>\r\n                <ButtonNya onClick={() => update(dataItem._id)}>update</ButtonNya>\r\n            </div>\r\n        )\r\n    },\r\n\r\n];\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {getCards} from \"./getCardsThunk\";\r\n\r\nexport const addCard = (id: string): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await CardsAPI.addCard(token, id);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, addCard Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n                    dispatch(getCards(id));\r\n\r\n                    DEV_VERSION && console.log('Nya, addCard Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"addCard\"\r\n        );\r\n    };\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {getCards} from \"./getCardsThunk\";\r\n\r\nexport const deleteCard = (id: string, pack_id: string): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await CardsAPI.deleteCard(token, id);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, deleteCard Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n                    dispatch(getCards(pack_id));\r\n\r\n                    DEV_VERSION && console.log('Nya, deleteCard Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"deleteCard\"\r\n        );\r\n    };\r\n","import {ThunkAction, ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStoreType} from \"../../../../cnf-1-main/m-2-bll/store\";\r\nimport {ExtraArgumentNya, GetAppStoreType, ReturnVoid, tryCatch} from \"../../../../cnf-1-main/m-2-bll/thunks\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport {ProfileActions, ProfileActionsType} from \"../../../f-1-auth/a-7-profile/p-2-bll/ProfileActions\";\r\nimport {CardsAPI} from \"../c-3-dal/CardsAPI\";\r\nimport {getCards} from \"./getCardsThunk\";\r\n\r\nexport const updateCard = (id: string, pack_id: string): ThunkAction<ReturnVoid, AppStoreType, ExtraArgumentNya, ProfileActionsType> =>\r\n    async (\r\n        dispatch: ThunkDispatch<AppStoreType, ExtraArgumentNya, ProfileActionsType>,\r\n        getStore: GetAppStoreType\r\n    ) => {\r\n        // nekoClear(dispatch);\r\n        // signInLoading(dispatch, true);\r\n        // dispatch(RegisterActions.setLoading(true));\r\n\r\n        const {token} = getStore().profile.user;\r\n\r\n        await tryCatch(\r\n            dispatch,\r\n            async () => {\r\n\r\n                const data = await CardsAPI.updateCard(token, id);\r\n\r\n                if (data.error) {\r\n                    // dispatch(RegisterActions.setError(data.error));\r\n\r\n                    DEV_VERSION && console.log('Nya, updateCard Error!', data);\r\n\r\n                } else {\r\n                    // setCookie('token', data.token, Math.floor(data.tokenDeathTime / 1000) - 180);\r\n\r\n                    // dispatch(nekoSetName(data.name));\r\n                    // signInSuccess(dispatch, true);\r\n                    // dispatch(RegisterActions.setSuccess(true));\r\n                    dispatch(ProfileActions.setToken(data.token));\r\n                    dispatch(getCards(pack_id));\r\n\r\n                    DEV_VERSION && console.log('Nya, updateCard Success!', data)\r\n                }\r\n\r\n            },\r\n            (e) => {\r\n                // dispatch(RegisterActions.setError(e))\r\n            },\r\n            \"updateCard\"\r\n        );\r\n    };\r\n","import React from \"react\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\nimport CardsContainer from \"./CardsContainer\";\r\n\r\nconst CardsPage = () => {\r\n\r\n    DEV_VERSION && console.log('render CardsPage');\r\n    return (\r\n        <div>\r\n            PacksPage\r\n\r\n            <CardsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardsPage;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\nimport ButtonNya from \"../../../cnf-0-common/c-1-ui/button/ButtonNya\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../../cnf-1-main/m-2-bll/store\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCards} from \"../../f-2-cards/c-2-cards/c-2-bll/getCardsThunk\";\r\nimport {CardType} from \"../../f-2-cards/c-2-cards/c-2-bll/CardsInitState\";\r\n\r\nconst grades = ['не знал', 'забыл', 'долго думал', 'перепутал', 'знал'];\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number}, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nconst LearnPage = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    // const [first, setFirst] = useState<boolean>(0);\r\n    const {cards} = useSelector((store: AppStoreType) => store.cards);\r\n    const {id} = useParams();\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 0,\r\n        shots: 0,\r\n\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n\r\n        created: '',\r\n        updated: '',\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('LearnContainer useEffect');\r\n\r\n        if (first) {\r\n            dispatch(getCards(id));\r\n            setFirst(false);\r\n        }\r\n\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, id, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    DEV_VERSION && console.log('render LearnPage');\r\n    return (\r\n        <div>\r\n            LearnPage\r\n\r\n            <div>{card.question}</div>\r\n            <div>\r\n                <ButtonNya onClick={() => setIsChecked(true)}>check</ButtonNya>\r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div>{card.answer}</div>\r\n\r\n                    {grades.map((g, i) => (\r\n                        <ButtonNya key={'grade-' + i} onClick={() => {\r\n                        }}>{g}</ButtonNya>\r\n                    ))}\r\n\r\n                    <div><ButtonNya onClick={onNext}>next</ButtonNya></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LearnPage;\r\n","import React, {ReactNode} from \"react\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport LoginPage from \"../../../../cnf-2-fatures/f-1-auth/a-1-login/l-1-ui/LoginPage\";\r\nimport RegisterPage from \"../../../../cnf-2-fatures/f-1-auth/a-2-register/r-1-ui/RegisterPage\";\r\nimport ProfilePage from \"../../../../cnf-2-fatures/f-1-auth/a-7-profile/p-1-ui/ProfilePage\";\r\nimport PacksPage from \"../../../../cnf-2-fatures/f-2-cards/c-1-packs/p-1-ui/PacksPage\";\r\nimport CardsPage from \"../../../../cnf-2-fatures/f-2-cards/c-2-cards/c-1-ui/CardsPage\";\r\nimport LearnPage from \"../../../../cnf-2-fatures/f-3-learn/l-1-ui/LearnPage\";\r\n\r\nexport type PageType = {\r\n    id: number;\r\n    title: string;\r\n    path?: string;\r\n    params?: string;\r\n    exact?: boolean;\r\n    page: (props: RouteComponentProps<any>) => ReactNode;\r\n};\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTER: '/register',\r\n    PROFILE: '/profile',\r\n    PACKS: '/packs',\r\n    CARDS: '/cards',\r\n    LEARN: '/learn',\r\n};\r\n\r\nexport const pages: PageType[] = [\r\n    {id: 0, title: 'login', path: PATH.LOGIN, exact: true, page: () => <LoginPage/>},\r\n    {id: 1, title: 'register', path: PATH.REGISTER, exact: true, page: () => <RegisterPage/>},\r\n    // {\r\n    //     id: 2, title: 'profile', path: PATH.PROFILE, params: '/:id', exact: true,\r\n    //     page: (p) => <div>{p.match.params.id}</div>\r\n    // },\r\n    {id: 2, title: 'profile', path: PATH.PROFILE, exact: true, page: () => <ProfilePage/>},\r\n    {id: 3, title: 'packs', path: PATH.PACKS, exact: true, page: () => <PacksPage/>},\r\n    {id: 4, title: 'cards', path: PATH.CARDS, params: '/:id', exact: true, page: () => <CardsPage/>},\r\n    {id: 5, title: 'learn', path: PATH.LEARN, params: '/:id', exact: true, page: () => <LearnPage/>},\r\n\r\n    {id: 9999, title: 'error404', page: () => <div>error404</div>}\r\n];\r\n","import React from \"react\";\r\nimport {pages} from \"../routes/Pages\";\r\nimport LinkNya from \"../../../../cnf-0-common/c-1-ui/link/LinkNya\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedLinks = pages.map(p => (\r\n    <LinkNya\r\n        key={'navLink-' + p.id}\r\n        to={(p.path || '') + (p.params ? '/1' : '')}\r\n        info={'navLink-' + p.id}\r\n    >\r\n        {p.title}\r\n    </LinkNya>\r\n));\r\n\r\nconst DevHeader = () => {\r\n\r\n    DEV_VERSION && console.log('render DevHeader');\r\n    return (\r\n        <>\r\n            {mappedLinks}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DevHeader;\r\n","import React from \"react\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {PageType, pages} from \"./Pages\";\r\nimport {DEV_VERSION} from \"../../../../config\";\r\n\r\nconst mappedRoutes = pages.map((p: PageType) => (\r\n    <Route\r\n        key={'route-' + p.id}\r\n        path={p.path && (p.path + (p.params || ''))}\r\n        exact={p.exact}\r\n        render={p.page}\r\n    />\r\n));\r\n\r\nconst Routes = () => {\r\n\r\n    DEV_VERSION && console.log('render Routes');\r\n    return (\r\n        <Switch>\r\n            {mappedRoutes}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\nimport DevHeader from \"./dev-header/DevHeader\";\r\nimport Routes from \"./routes/Routes\";\r\nimport {DEV_VERSION} from \"../../../config\";\r\n\r\n// headers, routes, footers\r\nconst Main = () => {\r\n\r\n    DEV_VERSION && console.log('render Main');\r\n    return (\r\n        <>\r\n            {DEV_VERSION && <DevHeader/>}\r\n\r\n            <Routes/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","export type LoginStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const loginInitState: LoginStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","export type RegisterStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const RegisterInitState: RegisterStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n};\r\n","export type UserType = {\r\n    _id: string;\r\n    email: string;\r\n    rememberMe: boolean;\r\n    isAdmin: boolean;\r\n\r\n    name: string;\r\n    verified: boolean;\r\n\r\n    token: string;\r\n    tokenDeathTime: number;\r\n\r\n    created: Date;\r\n    updated: Date;\r\n}\r\n\r\nexport type ProfileStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n\r\n    user: UserType\r\n}\r\n\r\nexport const ProfileInitState: ProfileStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: '',\r\n\r\n    user: {\r\n        _id: '0',\r\n        email: '',\r\n        rememberMe: false,\r\n        isAdmin: false,\r\n\r\n        name: 'fake',\r\n        verified: false,\r\n\r\n        token: '',\r\n        tokenDeathTime: 0,\r\n\r\n        created: new Date(),\r\n        updated: new Date(),\r\n    }\r\n};\r\n","export type PackType = {\r\n    _id: string;\r\n    user_id: string;\r\n\r\n    name: string;\r\n    path: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\nexport type PacksStateType = {\r\n    packs: PackType[];\r\n}\r\n\r\nexport const PacksInitState: PacksStateType = {\r\n    packs: [],\r\n};\r\n","export type CardType = {\r\n    _id: string;\r\n    cardsPack_id: string;\r\n\r\n    answer: string;\r\n    question: string;\r\n    grade: number;\r\n    shots: number;\r\n\r\n    type: string;\r\n    rating: number;\r\n    more_id: string;\r\n\r\n    created: string;\r\n    updated: string;\r\n}\r\n\r\nexport type CardsStateType = {\r\n    cards: CardType[];\r\n}\r\n\r\nexport const CardsInitState: CardsStateType = {\r\n    cards: [],\r\n};\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {loginReducer} from \"../../cnf-2-fatures/f-1-auth/a-1-login/l-2-bll/loginReducer\";\r\nimport {registerReducer} from \"../../cnf-2-fatures/f-1-auth/a-2-register/r-2-bll/registerReducer\";\r\nimport {DEV_VERSION} from \"../../config\";\r\nimport {profileReducer} from \"../../cnf-2-fatures/f-1-auth/a-7-profile/p-2-bll/profileReducer\";\r\nimport {packsReducer} from \"../../cnf-2-fatures/f-2-cards/c-1-packs/p-2-bll/packsReducer\";\r\nimport {cardsReducer} from \"../../cnf-2-fatures/f-2-cards/c-2-cards/c-2-bll/cardsReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n\r\n    profile: profileReducer,\r\n\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\nif (DEV_VERSION) {\r\n    // @ts-ignore\r\n    window.store = store; // for dev\r\n}\r\n","import {loginInitState, LoginStateType} from \"./LoginInitState\";\r\nimport {LoginActionsType} from \"./LoginActions\";\r\n\r\nexport const loginReducer = (state = loginInitState, action: LoginActionsType): LoginStateType => {\r\n    switch (action.type) {\r\n        case 'login/SET_ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                loading: false,\r\n                success: false,\r\n            }\r\n        }\r\n        case 'login/SET_LOADING': {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: action.loading,\r\n                success: false,\r\n            }\r\n        }\r\n        case 'login/SET_SUCCESS': {\r\n            return {\r\n                ...state,\r\n                error: '',\r\n                loading: false,\r\n                success: action.success,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n","import {RegisterInitState, RegisterStateType} from \"./RegisterInitState\";\r\nimport {RegisterActionsType} from \"./RegisterActions\";\r\n\r\nexport const registerReducer =\r\n    (state = RegisterInitState, action: RegisterActionsType): RegisterStateType => {\r\n        switch (action.type) {\r\n            case \"register/SET_ERROR\": {\r\n                return {\r\n                    ...state,\r\n                    error: action.error,\r\n                    loading: false,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"register/SET_LOADING\": {\r\n                return {\r\n                    ...state,\r\n                    error: '',\r\n                    loading: action.loading,\r\n                    success: false,\r\n                }\r\n            }\r\n            case \"register/SET_SUCCESS\": {\r\n                return {\r\n                    ...state,\r\n                    error: '',\r\n                    loading: false,\r\n                    success: action.success,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {ProfileInitState, ProfileStateType} from \"./ProfileInitState\";\r\nimport {ProfileActionsType} from \"./ProfileActions\";\r\n\r\nexport const profileReducer =\r\n    (state = ProfileInitState, action: ProfileActionsType): ProfileStateType => {\r\n        switch (action.type) {\r\n            case \"profile/SET_USER\": {\r\n                return {\r\n                    ...state,\r\n                    user: action.user,\r\n                }\r\n            }\r\n            case \"profile/SET_TOKEN\": {\r\n                return {\r\n                    ...state,\r\n                    user: {\r\n                        ...state.user,\r\n                        token: action.token,\r\n                    },\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {PacksInitState, PacksStateType} from \"./PacksInitState\";\r\nimport {PacksActionsType} from \"./PacksActions\";\r\n\r\nexport const packsReducer =\r\n    (state = PacksInitState, action: PacksActionsType): PacksStateType => {\r\n        switch (action.type) {\r\n            case \"packs/SET_PACKS\": {\r\n                return {\r\n                    ...state,\r\n                    packs: action.packs,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import {CardsInitState, CardsStateType} from \"./CardsInitState\";\r\nimport {CardsActionsType} from \"./CardsActions\";\r\n\r\nexport const cardsReducer =\r\n    (state = CardsInitState, action: CardsActionsType): CardsStateType => {\r\n        switch (action.type) {\r\n            case \"cards/SET_CARDS\": {\r\n                return {\r\n                    ...state,\r\n                    cards: action.cards,\r\n                }\r\n            }\r\n\r\n            default: {\r\n                return state\r\n            }\r\n        }\r\n    };\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport Main from \"./main/Main\";\nimport store from \"../m-2-bll/store\";\nimport {DEV_VERSION} from \"../../config\";\n\n// add context\nconst App = () => {\n\n    DEV_VERSION && console.log('render App');\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Provider store={store}>\n                    <Main/>\n                </Provider>\n            </HashRouter>\n        </div>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './cnf-1-main/m-1-ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}